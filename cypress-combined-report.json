{
  "stats": {
    "suites": 69,
    "tests": 379,
    "passes": 373,
    "pending": 0,
    "failures": 6,
    "start": "2021-01-29T23:14:20.855Z",
    "end": "2021-01-30T03:06:43.979Z",
    "duration": 489325,
    "testsRegistered": 379,
    "passPercent": 98.41688654353563,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c3e94e48-e2ca-4245-8a3c-d02cfc897985",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\aliasing.spec.js",
      "file": "cypress\\integration\\examples\\aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f9c92267-7ff6-4ea0-8eed-e2fb289d29e5",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 1319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "67be1f77-88f7-401f-ae86-2ea3d1ed5758",
              "parentUUID": "f9c92267-7ff6-4ea0-8eed-e2fb289d29e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1339,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "6a562b5a-f37a-4745-ab08-491503201e84",
              "parentUUID": "f9c92267-7ff6-4ea0-8eed-e2fb289d29e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67be1f77-88f7-401f-ae86-2ea3d1ed5758",
            "6a562b5a-f37a-4745-ab08-491503201e84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2658,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "853d3949-8134-4f4a-9e52-0a1a3cb7b140",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\assertions.spec.js",
      "file": "cypress\\integration\\examples\\assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fd481872-7d28-42f9-9a2d-f72f740e6dd6",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "84401ed0-d7d9-4a93-a55b-cee5ee73405b",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 1523,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementâ€™s-text-contents",
                  "err": {},
                  "uuid": "93a5ad07-b81e-46b1-af79-28e037317268",
                  "parentUUID": "84401ed0-d7d9-4a93-a55b-cee5ee73405b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 425,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "0c1046f6-446a-4306-94b3-7c6a07e6e4fd",
                  "parentUUID": "84401ed0-d7d9-4a93-a55b-cee5ee73405b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93a5ad07-b81e-46b1-af79-28e037317268",
                "0c1046f6-446a-4306-94b3-7c6a07e6e4fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1948,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 347,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "2af8115f-80de-46b8-8b6e-e6d92ad2fecb",
                  "parentUUID": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 619,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should(function ($p) {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = $p.map(function (i, el) {\n    return Cypress.$(el).text();\n  }); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "a7c142c9-4dfa-4b7f-a49a-07dded71d3a7",
                  "parentUUID": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 646,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should(function ($div) {\n  expect($div).to.have.length(1);\n  var className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "0e4a4acc-b512-41ed-8ea4-300f60c5e841",
                  "parentUUID": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should(function ($div) {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  var className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  }\n});",
                  "err": {},
                  "uuid": "c06bf98f-6f85-4a8a-8e79-24b7d9c7918d",
                  "parentUUID": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 323,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function normalizeText(s) {\n  return s.replace(/\\s/g, '').toLowerCase();\n};\ncy.get('.two-elements').find('.first').then(function ($first) {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should(function ($div) {\n  // we can massage text before comparing\n  var secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "7569309d-7a1d-4168-8bda-e6eb4f007b54",
                  "parentUUID": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 583,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "68578316-dfc1-4ec6-814d-07dd25de3ebd",
                  "parentUUID": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1966,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should(function ($div) {\n  var n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "e9bd5d76-4a7b-4ead-a998-768dbad512b1",
                  "parentUUID": "a903ba51-3d85-43d0-a6c5-0b8a0a1c82db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2af8115f-80de-46b8-8b6e-e6d92ad2fecb",
                "a7c142c9-4dfa-4b7f-a49a-07dded71d3a7",
                "0e4a4acc-b512-41ed-8ea4-300f60c5e841",
                "c06bf98f-6f85-4a8a-8e79-24b7d9c7918d",
                "7569309d-7a1d-4168-8bda-e6eb4f007b54",
                "68578316-dfc1-4ec6-814d-07dd25de3ebd",
                "e9bd5d76-4a7b-4ead-a998-768dbad512b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4793,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f630f234-02d4-4f20-bbe4-29d05eccf387",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cookies.spec.js",
      "file": "cypress\\integration\\examples\\cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "73f734f6-c1ee-48c4-a682-b7403c5c1883",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 1431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "02e6c137-9328-49fc-b71e-12987489c7ee",
              "parentUUID": "73f734f6-c1ee-48c4-a682-b7403c5c1883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "a0b3232e-da1e-4529-9c52-79b820572a7f",
              "parentUUID": "73f734f6-c1ee-48c4-a682-b7403c5c1883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "1a3f7ed5-43f6-4214-90c7-8589324f0ef8",
              "parentUUID": "73f734f6-c1ee-48c4-a682-b7403c5c1883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 1048,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "49aa8b22-ae1c-434b-9fd0-1cf4cf84a71b",
              "parentUUID": "73f734f6-c1ee-48c4-a682-b7403c5c1883",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "9d940d6c-ca7b-48f2-8e56-2e0a7c544ebc",
              "parentUUID": "73f734f6-c1ee-48c4-a682-b7403c5c1883",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02e6c137-9328-49fc-b71e-12987489c7ee",
            "a0b3232e-da1e-4529-9c52-79b820572a7f",
            "1a3f7ed5-43f6-4214-90c7-8589324f0ef8",
            "49aa8b22-ae1c-434b-9fd0-1cf4cf84a71b",
            "9d940d6c-ca7b-48f2-8e56-2e0a7c544ebc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d7b205c2-ee41-4faa-ad46-fd75e610f531",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cypress_api.spec.js",
      "file": "cypress\\integration\\examples\\cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1299384d-831a-4cf6-95f5-de9da7605855",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 1693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, function (subject, method) {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {// subject is still $button\n});",
              "err": {},
              "uuid": "ced78b1b-dc16-44c4-ba64-7aeac1c9ee57",
              "parentUUID": "1299384d-831a-4cf6-95f5-de9da7605855",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ced78b1b-dc16-44c4-ba64-7aeac1c9ee57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "399fc1b0-c14e-40a0-b84e-ea013a7acdb6",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "c5a14cbd-1c8f-4c5c-bb82-0b73c8f56ae3",
              "parentUUID": "399fc1b0-c14e-40a0-b84e-ea013a7acdb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "4455fb01-5098-44c0-a1fa-9c4b6454d80d",
              "parentUUID": "399fc1b0-c14e-40a0-b84e-ea013a7acdb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "dfd4b3b7-8fea-4dcb-a51e-0a413659d49b",
              "parentUUID": "399fc1b0-c14e-40a0-b84e-ea013a7acdb6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5a14cbd-1c8f-4c5c-bb82-0b73c8f56ae3",
            "4455fb01-5098-44c0-a1fa-9c4b6454d80d",
            "dfd4b3b7-8fea-4dcb-a51e-0a413659d49b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1628,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "743dd49f-e590-4f1c-8c2d-26016a0defc2",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 747,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "7f4b5a93-5276-4bf4-a8d6-d76e93543b15",
              "parentUUID": "743dd49f-e590-4f1c-8c2d-26016a0defc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f4b5a93-5276-4bf4-a8d6-d76e93543b15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 747,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7bc4b4e8-27ec-43cc-b97f-ad09c3a2ff5b",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 535,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "449fee06-bf39-4f20-a2fc-467847f9934c",
              "parentUUID": "7bc4b4e8-27ec-43cc-b97f-ad09c3a2ff5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "449fee06-bf39-4f20-a2fc-467847f9934c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 535,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17cb61b7-36de-46b4-81c9-bf6781912454",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "46dbea19-8e1a-4745-98a2-5490f456c820",
              "parentUUID": "17cb61b7-36de-46b4-81c9-bf6781912454",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46dbea19-8e1a-4745-98a2-5490f456c820"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f16011cd-0714-414e-8e1f-e3d4b8bce561",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 546,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "08a5c746-4c77-47db-bb8d-0e542ab0231c",
              "parentUUID": "f16011cd-0714-414e-8e1f-e3d4b8bce561",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08a5c746-4c77-47db-bb8d-0e542ab0231c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 546,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99b4da72-f2b0-43cc-a7e9-7183231b64a0",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "98dea5c6-2dec-4453-bcd0-d04c857786b5",
              "parentUUID": "99b4da72-f2b0-43cc-a7e9-7183231b64a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98dea5c6-2dec-4453-bcd0-d04c857786b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 328,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af1ccd25-0783-4f29-8efd-1fc73c465eb3",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "d5f1ff99-350b-4070-a70e-98171b0bf109",
              "parentUUID": "af1ccd25-0783-4f29-8efd-1fc73c465eb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5f1ff99-350b-4070-a70e-98171b0bf109"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 292,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c8eba4e-930a-442f-ae20-8042ac9f1dc8",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "c634fceb-10d7-440d-9307-b3d730b82869",
              "parentUUID": "2c8eba4e-930a-442f-ae20-8042ac9f1dc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c634fceb-10d7-440d-9307-b3d730b82869"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 270,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5bf80318-a1c5-4af7-a684-da4e11ae9e3f",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "e8616827-43de-4b6a-8b86-b52bcb52f350",
              "parentUUID": "5bf80318-a1c5-4af7-a684-da4e11ae9e3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8616827-43de-4b6a-8b86-b52bcb52f350"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "262a8ed2-ca7b-49ce-9bc8-430ba982908a",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\files.spec.js",
      "file": "cypress\\integration\\examples\\files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f9eda55-1a41-4eb6-b202-805332c8c314",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 1750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "cc41af2b-7fe4-4816-9be6-64e3af82e38b",
              "parentUUID": "1f9eda55-1a41-4eb6-b202-805332c8c314",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "6a1375e9-f07a-4307-bf69-3bf8a944592e",
              "parentUUID": "1f9eda55-1a41-4eb6-b202-805332c8c314",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "0cc38579-6426-49d1-aabc-346062457203",
              "parentUUID": "1f9eda55-1a41-4eb6-b202-805332c8c314",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 916,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(function (users) {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(function (profile) {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "d425d41a-932e-4703-ad4b-1e8d5fc0c86d",
              "parentUUID": "1f9eda55-1a41-4eb6-b202-805332c8c314",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc41af2b-7fe4-4816-9be6-64e3af82e38b",
            "6a1375e9-f07a-4307-bf69-3bf8a944592e",
            "0cc38579-6426-49d1-aabc-346062457203",
            "d425d41a-932e-4703-ad4b-1e8d5fc0c86d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3857,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5489635a-7022-4c2c-bc5d-ab18f2151b6f",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\local_storage.spec.js",
      "file": "cypress\\integration\\examples\\local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "db2b6dbb-8411-4ef0-a746-9dcd955c742d",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 2356,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.be[\"null\"];\n}); // Clear key matching string in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage('prop1').should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "5c280369-e144-4989-b853-6a651f0faa6c",
              "parentUUID": "db2b6dbb-8411-4ef0-a746-9dcd955c742d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c280369-e144-4989-b853-6a651f0faa6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "11e6eae2-fed5-40ee-b905-b9ba7871c31f",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\location.spec.js",
      "file": "cypress\\integration\\examples\\location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "36a6916a-633c-432d-a130-302f405fe9a0",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 1062,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "c3b935df-a175-4ba6-a420-30802b0d0904",
              "parentUUID": "36a6916a-633c-432d-a130-302f405fe9a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "f3648d3e-17bf-4eda-b84d-fc0bcb5d04dc",
              "parentUUID": "36a6916a-633c-432d-a130-302f405fe9a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "21a56a40-5ceb-4303-ba90-8523d2416b1a",
              "parentUUID": "36a6916a-633c-432d-a130-302f405fe9a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3b935df-a175-4ba6-a420-30802b0d0904",
            "f3648d3e-17bf-4eda-b84d-fc0bcb5d04dc",
            "21a56a40-5ceb-4303-ba90-8523d2416b1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1812,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b4f08810-eb3c-4c44-b66e-23ea3d63c294",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\misc.spec.js",
      "file": "cypress\\integration\\examples\\misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13b24a12-c0cd-4eae-b12b-abc8dad97853",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 1932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "75f10279-7727-46ec-a8ee-d6ad9caa3158",
              "parentUUID": "13b24a12-c0cd-4eae-b12b-abc8dad97853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 1003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \".concat(Cypress.platform, \" architecture \").concat(Cypress.arch)); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nvar isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "b2dbdae3-1d06-4a83-aff1-0459f50bf275",
              "parentUUID": "13b24a12-c0cd-4eae-b12b-abc8dad97853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 1004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "e4d6618c-8f8e-473b-a970-b5f95101f4d6",
              "parentUUID": "13b24a12-c0cd-4eae-b12b-abc8dad97853",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "8d6643df-4165-4261-8f21-f027ed3923bb",
              "parentUUID": "13b24a12-c0cd-4eae-b12b-abc8dad97853",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "07cbd657-609e-476b-a58d-6e6f57d10be0",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 4382,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"Screenshot\",\n  \"value\": \"screenshots\\\\examples\\\\misc.spec.js\\\\my-image.png\"\n}",
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "1e9c3f84-b53f-4b7b-bfdf-1bbd1ed8f9bc",
                  "parentUUID": "07cbd657-609e-476b-a58d-6e6f57d10be0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 415,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot: function onBeforeScreenshot() {},\n  onAfterScreenshot: function onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "8fb68503-cb46-4102-b5aa-8300124a5d70",
                  "parentUUID": "07cbd657-609e-476b-a58d-6e6f57d10be0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e9c3f84-b53f-4b7b-bfdf-1bbd1ed8f9bc",
                "8fb68503-cb46-4102-b5aa-8300124a5d70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4797,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "75f10279-7727-46ec-a8ee-d6ad9caa3158",
            "b2dbdae3-1d06-4a83-aff1-0459f50bf275",
            "e4d6618c-8f8e-473b-a970-b5f95101f4d6",
            "8d6643df-4165-4261-8f21-f027ed3923bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1cc15c9d-80b4-4a45-afc0-b076a730cb2b",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\navigation.spec.js",
      "file": "cypress\\integration\\examples\\navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21eb2420-1e5f-4ff1-a6b6-a0aea7d24aec",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 3246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "0cef9d30-2d28-4e00-bf62-55f1550cfacb",
              "parentUUID": "21eb2420-1e5f-4ff1-a6b6-a0aea7d24aec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 1510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "93f2c0d0-3d94-4289-8873-a926f129f9cf",
              "parentUUID": "21eb2420-1e5f-4ff1-a6b6-a0aea7d24aec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 1182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad: function onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  },\n  onLoad: function onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  }\n});",
              "err": {},
              "uuid": "136107cf-b66d-4ef7-8918-33918c4ddd87",
              "parentUUID": "21eb2420-1e5f-4ff1-a6b6-a0aea7d24aec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cef9d30-2d28-4e00-bf62-55f1550cfacb",
            "93f2c0d0-3d94-4289-8873-a926f129f9cf",
            "136107cf-b66d-4ef7-8918-33918c4ddd87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5938,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "14f64f96-051f-4c2b-ac55-b2681ba18ef1",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\network_requests.spec.js",
      "file": "cypress\\integration\\examples\\network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06742fc0-941c-44c2-9097-7cb3cdf49630",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1841,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(function (response) {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "e1cdf0e4-306a-4abc-ace8-bde87bab47e8",
              "parentUUID": "06742fc0-941c-44c2-9097-7cb3cdf49630",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 868,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(function (response) {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "ae2f556c-2ed7-4d64-95a4-c668cd9cc517",
              "parentUUID": "06742fc0-941c-44c2-9097-7cb3cdf49630",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "9b63a593-83dd-48ae-9fb5-c13e718db437",
              "parentUUID": "06742fc0-941c-44c2-9097-7cb3cdf49630",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 773,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(function (user) {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(function (response) {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "db2c034b-f185-486f-97cd-59abffe0b971",
              "parentUUID": "06742fc0-941c-44c2-9097-7cb3cdf49630",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE ðŸ‘€\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "7fb75b6f-1d8f-4e0c-8c82-52db3974aa89",
              "parentUUID": "06742fc0-941c-44c2-9097-7cb3cdf49630",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 2027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nvar message = 'whoa, this comment does not exist'; // Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(function (_ref) {\n  var request = _ref.request,\n      response = _ref.response;\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "91e2a253-7c65-4833-8810-6a9cc0a6f445",
              "parentUUID": "06742fc0-941c-44c2-9097-7cb3cdf49630",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1cdf0e4-306a-4abc-ace8-bde87bab47e8",
            "ae2f556c-2ed7-4d64-95a4-c668cd9cc517",
            "9b63a593-83dd-48ae-9fb5-c13e718db437",
            "db2c034b-f185-486f-97cd-59abffe0b971",
            "7fb75b6f-1d8f-4e0c-8c82-52db3974aa89",
            "91e2a253-7c65-4833-8810-6a9cc0a6f445"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6918,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "13b68345-006e-467e-a18e-c441caf894e5",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\querying.spec.js",
      "file": "cypress\\integration\\examples\\querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac91ae5e-daa5-44cb-8d67-9d47127efdfc",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 1273,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "88f7f28b-840b-48ee-8fa3-0feb593e1246",
              "parentUUID": "ac91ae5e-daa5-44cb-8d67-9d47127efdfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "152a1c8b-d7b1-4a8d-8e0c-4b9f1b462f87",
              "parentUUID": "ac91ae5e-daa5-44cb-8d67-9d47127efdfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "0ee55753-dd34-410c-bd1b-337dde3281fd",
              "parentUUID": "ac91ae5e-daa5-44cb-8d67-9d47127efdfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 616,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(function () {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "d4d20ff3-45f3-4d4c-a673-8895199bdca4",
              "parentUUID": "ac91ae5e-daa5-44cb-8d67-9d47127efdfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 1400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "5a4e7cb8-6cb6-45ea-8ae3-2496554f2a76",
              "parentUUID": "ac91ae5e-daa5-44cb-8d67-9d47127efdfc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88f7f28b-840b-48ee-8fa3-0feb593e1246",
            "152a1c8b-d7b1-4a8d-8e0c-4b9f1b462f87",
            "0ee55753-dd34-410c-bd1b-337dde3281fd",
            "d4d20ff3-45f3-4d4c-a673-8895199bdca4",
            "5a4e7cb8-6cb6-45ea-8ae3-2496554f2a76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4538,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "89f156ae-a42f-42d7-a967-401945ed9a4e",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "file": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3bf842bc-874e-4cff-8536-48fc19a73634",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  foo: function foo() {}\n};\nvar spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "b532f015-f291-4cc8-9881-d12b465ca581",
              "parentUUID": "3bf842bc-874e-4cff-8536-48fc19a73634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2660,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo: function foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(function () {\n  obj.foo('first');\n}, 500);\nsetTimeout(function () {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "85212c9c-0f14-45f2-8969-ad8c73f52a81",
              "parentUUID": "3bf842bc-874e-4cff-8536-48fc19a73634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo: function foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nvar stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "3820159a-661f-4729-ba8a-e962c7f0ac09",
              "parentUUID": "3bf842bc-874e-4cff-8536-48fc19a73634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "4f8228e2-fe3d-4f99-9c2e-e82731d4de86",
              "parentUUID": "3bf842bc-874e-4cff-8536-48fc19a73634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 677,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "053e4ae4-cc1a-47dc-bfa4-6ef99549afdb",
              "parentUUID": "3bf842bc-874e-4cff-8536-48fc19a73634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet: function greet(name) {\n    return \"Hello, \".concat(name, \"!\");\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number)[\"throws\"](new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi'); // @ts-ignore\nexpect(function () {\n  return greeter.greet(42);\n}).to[\"throw\"]('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "b95e4a43-f6b2-4ad0-b2b0-929537c944dc",
              "parentUUID": "3bf842bc-874e-4cff-8536-48fc19a73634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add: function add(a, b) {\n    return a + b;\n  }\n};\nvar spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match[\"in\"]([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nvar isEven = function isEven(x) {\n  return x % 2 === 0;\n}; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nvar isGreaterThan = function isGreaterThan(limit) {\n  return function (x) {\n    return x > limit;\n  };\n};\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nvar isLessThan = function isLessThan(limit) {\n  return function (x) {\n    return x < limit;\n  };\n}; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nvar M = Cypress.sinon.match;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "8a73a3b4-99ae-4403-b412-3affe6726d36",
              "parentUUID": "3bf842bc-874e-4cff-8536-48fc19a73634",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b532f015-f291-4cc8-9881-d12b465ca581",
            "85212c9c-0f14-45f2-8969-ad8c73f52a81",
            "3820159a-661f-4729-ba8a-e962c7f0ac09",
            "4f8228e2-fe3d-4f99-9c2e-e82731d4de86",
            "053e4ae4-cc1a-47dc-bfa4-6ef99549afdb",
            "b95e4a43-f6b2-4ad0-b2b0-929537c944dc",
            "8a73a3b4-99ae-4403-b412-3affe6726d36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d8da0f3f-e500-45e1-afc3-4a10d0aa2f45",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\traversal.spec.js",
      "file": "cypress\\integration\\examples\\traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 925,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "dccc4907-f220-483d-8bc8-86664fde7f8d",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "427fcbf0-4688-4cae-99bb-040db4475243",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "622f96b9-eac0-4808-8a59-af800af4da63",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "34e946d1-d45d-40d5-abdf-80cc06f73b2f",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "96057062-0814-414a-9e03-b9a8f062a98d",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "9e579266-263c-4c67-a009-eb86717a1769",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "8d12887f-6132-451e-8cf5-f65fd8cb8a9e",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 618,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "7c0aa45e-c482-4c02-84b7-d94fdb7d4e7f",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "e9f4c0d1-e41a-4f7e-a1d2-c3bd94106869",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "143fe47c-f8a1-4ddb-bbeb-73f4e3c88220",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "dfec36fc-3757-4067-9f52-94ea8cd78346",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "2b341ca0-e816-4c2f-a935-ceb542c6b5e9",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 617,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "849dcb59-7c70-4ddc-a5ee-e1ea292efb86",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 462,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "ab9e7b03-c5d7-4770-aab1-ce2856487998",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "023b35f7-e745-4577-b2f0-f0a4a934998e",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "4fdd2ce7-2c75-4e4e-84e4-bf11c65e20c1",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "3c2dd1c0-2757-4d93-aed4-28e11da40be8",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "3f7dbf13-44e6-403f-964a-f4ab502938ba",
              "parentUUID": "d13aee5d-e918-4bb9-9242-c81ebf891e8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dccc4907-f220-483d-8bc8-86664fde7f8d",
            "427fcbf0-4688-4cae-99bb-040db4475243",
            "622f96b9-eac0-4808-8a59-af800af4da63",
            "34e946d1-d45d-40d5-abdf-80cc06f73b2f",
            "96057062-0814-414a-9e03-b9a8f062a98d",
            "9e579266-263c-4c67-a009-eb86717a1769",
            "8d12887f-6132-451e-8cf5-f65fd8cb8a9e",
            "7c0aa45e-c482-4c02-84b7-d94fdb7d4e7f",
            "e9f4c0d1-e41a-4f7e-a1d2-c3bd94106869",
            "143fe47c-f8a1-4ddb-bbeb-73f4e3c88220",
            "dfec36fc-3757-4067-9f52-94ea8cd78346",
            "2b341ca0-e816-4c2f-a935-ceb542c6b5e9",
            "849dcb59-7c70-4ddc-a5ee-e1ea292efb86",
            "ab9e7b03-c5d7-4770-aab1-ce2856487998",
            "023b35f7-e745-4577-b2f0-f0a4a934998e",
            "4fdd2ce7-2c75-4e4e-84e4-bf11c65e20c1",
            "3c2dd1c0-2757-4d93-aed4-28e11da40be8",
            "3f7dbf13-44e6-403f-964a-f4ab502938ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10317,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6f3eaab5-4876-4606-bbb4-ea78933c19e5",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\utilities.spec.js",
      "file": "cypress\\integration\\examples\\utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cbbc7cfc-930b-410d-b044-a1bcc217b4ea",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  var ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "3919cdab-ebd3-41d0-9e5c-e56fd120ad89",
              "parentUUID": "cbbc7cfc-930b-410d-b044-a1bcc217b4ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "1f0ef3c7-fb71-4fa4-8e9f-a199722e6043",
              "parentUUID": "cbbc7cfc-930b-410d-b044-a1bcc217b4ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 1019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(function (dataUrl) {\n    // create an <img> element and set its src to the dataUrl\n    var img = Cypress.$('<img />', {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "5a3acb77-b29c-48c8-9d16-6f0c2f6f88fd",
              "parentUUID": "cbbc7cfc-930b-410d-b044-a1bcc217b4ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be[\"true\"];\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"false\"]; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"true\"]; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be[\"false\"];",
              "err": {},
              "uuid": "1f633524-4617-4f0e-bd1c-89659fe0cc50",
              "parentUUID": "cbbc7cfc-930b-410d-b044-a1bcc217b4ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.moment() - format or parse dates using a moment method",
              "fullTitle": "Utilities Cypress.moment() - format or parse dates using a moment method",
              "timedOut": null,
              "duration": 545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/moment\nvar time = Cypress.moment('2014-04-25T19:38:53.196Z').utc().format('h:mm A');\nexpect(time).to.be.a('string');\ncy.get('.utility-moment').contains('3:38 PM').should('have.class', 'badge'); // the time in the element should be between 3pm and 5pm\nvar start = Cypress.moment('3:00 PM', 'LT');\nvar end = Cypress.moment('5:00 PM', 'LT');\ncy.get('.utility-moment .badge').should(function ($el) {\n  // parse American time like \"3:38 PM\"\n  var m = Cypress.moment($el.text().trim(), 'LT'); // display hours + minutes + AM|PM\n  var f = 'h:mm A';\n  expect(m.isBetween(start, end), \"\".concat(m.format(f), \" should be between \").concat(start.format(f), \" and \").concat(end.format(f))).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "63803442-a092-4f9f-a24f-4ebbeadd3181",
              "parentUUID": "cbbc7cfc-930b-410d-b044-a1bcc217b4ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise(function (resolve, reject) {\n    setTimeout(function () {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(function () {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(function (str) {\n    expect(str).to.eq('foo');\n    expect(waited).to.be[\"true\"];\n  });\n});",
              "err": {},
              "uuid": "b6979650-af1e-4586-8a72-18e97cb4ecca",
              "parentUUID": "cbbc7cfc-930b-410d-b044-a1bcc217b4ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3919cdab-ebd3-41d0-9e5c-e56fd120ad89",
            "1f0ef3c7-fb71-4fa4-8e9f-a199722e6043",
            "5a3acb77-b29c-48c8-9d16-6f0c2f6f88fd",
            "1f633524-4617-4f0e-bd1c-89659fe0cc50",
            "63803442-a092-4f9f-a24f-4ebbeadd3181",
            "b6979650-af1e-4586-8a72-18e97cb4ecca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5435,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "84c25137-eb11-47d7-9b42-347888db75b5",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\viewport.spec.js",
      "file": "cypress\\integration\\examples\\viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e7eb111-2d74-4424-a0f6-7e64d03b9b96",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 4096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "02e8e476-adb5-4a37-b1f0-d7d347afa46a",
              "parentUUID": "5e7eb111-2d74-4424-a0f6-7e64d03b9b96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02e8e476-adb5-4a37-b1f0-d7d347afa46a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4096,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2d62f516-4a8e-47c0-997a-0400a7bf57ba",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\waiting.spec.js",
      "file": "cypress\\integration\\examples\\waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4ac496c4-c8dc-471f-9d38-49f64a000075",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 6550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "c1303c29-ac9c-48f4-a49a-f68674ae90ed",
              "parentUUID": "4ac496c4-c8dc-471f-9d38-49f64a000075",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 1400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "d8951921-c286-4710-b420-b7cc393a214f",
              "parentUUID": "4ac496c4-c8dc-471f-9d38-49f64a000075",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1303c29-ac9c-48f4-a49a-f68674ae90ed",
            "d8951921-c286-4710-b420-b7cc393a214f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5fbeaaba-a006-4feb-bdb2-2736dcbc01d8",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\window.spec.js",
      "file": "cypress\\integration\\examples\\window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a1691eb-ba2c-43fb-bd11-0b3b0b9453b1",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 1015,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "c327f1ce-8f5a-41f3-801c-c379157ce407",
              "parentUUID": "9a1691eb-ba2c-43fb-bd11-0b3b0b9453b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 455,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "2029477a-4a8b-4278-9479-3b9a4451e512",
              "parentUUID": "9a1691eb-ba2c-43fb-bd11-0b3b0b9453b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "676da1da-50c2-45f0-ad9c-dc583dc79f40",
              "parentUUID": "9a1691eb-ba2c-43fb-bd11-0b3b0b9453b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c327f1ce-8f5a-41f3-801c-c379157ce407",
            "2029477a-4a8b-4278-9479-3b9a4451e512",
            "676da1da-50c2-45f0-ad9c-dc583dc79f40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1838,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c07cb114-74bd-4524-be9d-dbcf3954e38f",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\amazonSample.js",
      "file": "cypress\\integration\\tracktik\\amazonSample.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Validate elements on the landing page",
          "fullTitle": "Validate elements on the landing page",
          "timedOut": null,
          "duration": 18606,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var url = 'https://www.amazon.ca//';\nvar amazonLogo = '#nav-logo-sprites'; //Visit Amazon.ca\ncy.visit(url); //Amazon Logo should be displayed\ncy.get(amazonLogo).should('be.visible'); //Search bar should be displayed\ncy.get('#nav-search').should('be.visible').click(); //Country/Location flag should be displayed\ncy.get('.icp-nav-flag').should('be.visible'); //Hello message should be displayed\ncy.get('#nav-global-location-popover-link').should('be.visible'); //Accounts text should be displayed\ncy.get('#nav-link-accountList').should('be.visible'); //Orders and returns\ncy.get('#nav-orders').should('be.visible'); //Shopping Cart Icon\ncy.get('.nav-cart-icon').should('be.visible'); // All Menu Bar\ncy.get('#nav-hamburger-menu').should('be.visible'); //BestSellers\ncy.get('[href=\"/Best-Sellers-generic/zgbs/?ref_=nav_cs_bestsellers_63ca45fd42734a1a90e55e964c1a4be0\"]').should('be.visible'); //Gift Ideas\ncy.get('[href=\"/gcx/-/gfhz/?ref_=nav_cs_giftfinder_192be93f79264d46933b55cd454cfadf\"]').should('be.visible'); //Prime\ncy.get('#nav-link-prime > :nth-child(1)').should('be.visible'); //New Releases\ncy.get('[href=\"/gp/new-releases/?ref_=nav_cs_newreleases_3700f09c268c435e83b755749c4fc4e9\"]').should('be.visible'); //Customer Service\ncy.get('[href=\"/gp/help/customer/display.html?ref_=nav_cs_help_91eafdc699444f9c9ab412df262cc693\"]').should('be.visible'); //Slider\ncy.get('.cropped-image-map-size > .cropped-image-map-center-alignment > span > .a-link-normal > img').should('be.visible'); //Search for a particular item\ncy.get('#nav-search').type('Apple'); //Click on Account to sign in\ncy.get('#nav-link-accountList').click(); //Verify amazon logo is visible\ncy.get('.a-icon-logo').should('be.visible'); //Verify sign in page is visible\ncy.get('.a-padding-extra-large').should('be.visible'); //Verify username field is visible\ncy.get('#ap_email').should('be.visible'); //Verify username field is editable\ncy.get('#ap_email').should('be.enabled'); //verify create account button is visible\ncy.get('#createAccountSubmit').should('be.visible'); //verify continue button is visible\ncy.get('.a-button-inner > #continue').should('be.visible').click(); //Enter Username\ncy.get('#ap_email').type('dhavaldesai1609@gmail.com'); //Click on continue button\ncy.get('.a-button-inner > #continue').should('be.visible').click(); //Verify username field is visible\ncy.get('#ap_password').should('be.visible'); //Verify username field is editable\ncy.get('#ap_password').should('be.enabled'); //Enter Password\ncy.get('#ap_password').type('neverShareYourPassword@123'); //Verify sign in button\ncy.get('#signInSubmit').should('be.visible'); //Click on sign in button\ncy.get('#signInSubmit').click();",
          "err": {},
          "uuid": "61cb624f-4600-4ea6-bf7f-e52fdaa9d4b3",
          "parentUUID": "c07cb114-74bd-4524-be9d-dbcf3954e38f",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "61cb624f-4600-4ea6-bf7f-e52fdaa9d4b3"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 18606,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "cb2b57cf-6587-4977-84ad-945c6553717b",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\Zensurance Test 1.txt",
      "file": "cypress\\integration\\tracktik\\Zensurance Test 1.txt",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Check unrecognized industry in search results in error message",
          "fullTitle": "Check unrecognized industry in search results in error message",
          "timedOut": null,
          "duration": 14228,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\tracktik\\\\Zensurance Test 1.txt\\\\Check unrecognized industry in search results in error message (failed).png\"\n}",
          "code": "//Visit the Demo QA Website\ncy.visit(\"https://app.zensurance.com/quote\");\n\n//Enter the search criteria for the field 'Industry'\ncy.get('.sc-hMqMXs').type('faw');\n//Verify that there are no search results except the error message\ncy.get('.pin-b > .text-base').should('have.length',1);\n\n//Click on the next button\ncy.get('[data-testid=next-button]').click();\n//Ensure that the error message 'Please select an industry' is displayed\ncy.get('.text-xs').should('have.text','Please select an industry')\n//Ensure that the error message 'There are a few errors above' is displayed\ncy.get('[id=qid-101801]').should('have.text','There are a few errors above')",
          "err": {
            "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.\n    at Context.eval (https://app.zensurance.com/__cypress/tests?p=cypress\\integration\\tracktik\\Zensurance%20Test%201.txt:104:8)",
            "diff": null
          },
          "uuid": "ce374326-30ad-4e06-af84-39948f54f888",
          "parentUUID": "cb2b57cf-6587-4977-84ad-945c6553717b",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "ce374326-30ad-4e06-af84-39948f54f888"
      ],
      "pending": [],
      "skipped": [],
      "duration": 14228,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "97208f6f-1064-4b63-9c4c-4726c4454d49",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\Zensurance Test 2.txt",
      "file": "cypress\\integration\\tracktik\\Zensurance Test 2.txt",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "fullTitle": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "timedOut": null,
          "duration": 12821,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\tracktik\\\\Zensurance Test 2.txt\\\\A user enters an invalid email address, and the user is unable to proceed to the next page (failed).png\"\n}",
          "code": "//Visit the Demo QA Website\ncy.visit(\"https://app.zensurance.com/quote\");\n\n//Enter the search criteria for the field 'Industry' as cons\ncy.get('.sc-hMqMXs').type('cons');\n//Ensure that the item Construction contractors is displayed in search result\ncy.get('#main-content').find('ul').contains('Construction contractors');\n//Ensure that the item General Contractor, Subcontractor is displayed in search result\ncy.get('#main-content').find('ul').contains('General Contractor, Subcontractor');\n//Click on the first search result\ncy.get('#main-content').find('ul').contains('Construction contractors').click();\n\n// Select $70000 from the Revenue Slider\ncy.get('[style=\"left: 18.3673%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click();\n\n//Assert text value displayed on slider. \ncy.get('#hook-revenueLastFinancialYear > .px-5').should('contain.text', '$70,000');\n//Select Yes for Was all your Gross Revenue from Canada?\ncy.get('[for=\"revenueLastFinancialYearFromCanadayes\"] > .sc-kgoBCf').click();\n//Click on the next button\ncy.get('[data-testid=next-button]').click();\n\n//Select $90000 from the Revenue Slider\ncy.get('[style=\"left: 18.3673%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click()\n//Select Yes for Was all your Gross Revenue from Canada?\ncy.get('[for=\"projectedRevenueCurrentFinancialYearFromCanadayes\"] > .sc-kgoBCf').click();\n//Click on the next button\ncy.get('[data-testid=next-button]').click();\n//Enter Invalid Email Address\ncy.get('.sc-hMqMXs').type('asdf@u4fb2');\n//Click on the next button\ncy.get('[data-testid=next-button]').click();\n//Ensure that the error message 'Please enter a valid email address (ex: john@example.com)' is displayed\ncy.get('.text-xs').should('have.text','Please enter a valid email address (ex: john@example.com)')\n//Ensure that the error message 'There are a few errors above' is displayed\ncy.get('[data-comp=error-wrapper]').should('have.text','There are a few errors above')",
          "err": {
            "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.\n    at Context.eval (https://app.zensurance.com/__cypress/tests?p=cypress\\integration\\tracktik\\Zensurance%20Test%202.txt:104:8)",
            "diff": null
          },
          "uuid": "bc5d169c-6030-47c3-89ca-8dd1c6630236",
          "parentUUID": "97208f6f-1064-4b63-9c4c-4726c4454d49",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "bc5d169c-6030-47c3-89ca-8dd1c6630236"
      ],
      "pending": [],
      "skipped": [],
      "duration": 12821,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "d2454cab-ba00-4ef7-9cc2-14daa175c7a0",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\Zensurance Test 3.txt",
      "file": "cypress\\integration\\tracktik\\Zensurance Test 3.txt",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "fullTitle": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "timedOut": null,
          "duration": 12182,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\tracktik\\\\Zensurance Test 3.txt\\\\A user enters an invalid email address, and the user is unable to proceed to the next page (failed).png\"\n}",
          "code": "//Visit the Demo QA Website\ncy.visit(\"https://app.zensurance.com/quote\");\n\n//Enter the search criteria for the field 'Industry' as cons\ncy.get('.sc-hMqMXs').type('cons');\n//Ensure that the item Construction contractors is displayed in search result\ncy.get('#main-content').find('ul').contains('Construction contractors');\n//Ensure that the item General Contractor, Subcontractor is displayed in search result\ncy.get('#main-content').find('ul').contains('General Contractor, Subcontractor');\n//Click on the first search result\ncy.get('#main-content').find('ul').contains('Construction contractors').click();\n\n// Select $70000 from the Revenue Slider\ncy.get('[style=\"left: 18.3673%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click();\n\n//Assert text value displayed on slider. \ncy.get('#hook-revenueLastFinancialYear > .px-5').should('contain.text', '$70,000');\n//Select No for Was all your Gross Revenue from Canada? \ncy.get('[for=\"revenueLastFinancialYearFromCanadano\"] > .sc-kgoBCf').click();\n//Select 40% for Canada\ncy.get(':nth-child(4) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 40%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click();\n\n//Select 30% for USA\ncy.get(':nth-child(5) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 30%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click();\n\n//Select 30% Western Europe\ncy.get(':nth-child(6) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 30%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click();\n//Select 10% for Other\ncy.get(':nth-child(7) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 10%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click();\n//Click on the next button\ncy.get('[data-testid=next-button]').click();\n//Ensure that the error message 'Total must equal 100%' is displayed\ncy.get('.mt-3 > :nth-child(1) > .frame-me').should('have.text','Total must equal 100%')\n//Ensure that the total is greater than 100%\ncy.get('.Text-LG').should('have.text','110%');\n//Ensure that the error message 'There are a few errors above' is displayed\ncy.get('[data-comp=error-wrapper]').should('have.text','There are a few errors above')",
          "err": {
            "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.\n    at Context.eval (https://app.zensurance.com/__cypress/tests?p=cypress\\integration\\tracktik\\Zensurance%20Test%203.txt:104:8)",
            "diff": null
          },
          "uuid": "cf72f024-9908-4dc2-9bdf-3c366613bae4",
          "parentUUID": "d2454cab-ba00-4ef7-9cc2-14daa175c7a0",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "cf72f024-9908-4dc2-9bdf-3c366613bae4"
      ],
      "pending": [],
      "skipped": [],
      "duration": 12182,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "59f11485-0390-4364-bf85-875a7940deaf",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\actions.spec.js",
      "file": "cypress\\integration\\examples\\actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 6186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "d9cac1f7-6eaa-4783-8afa-9a345d4f917b",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "71cbdc99-e3b4-412b-9500-ab938e9b3ac4",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 972,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "4059a4c3-0a0c-4b3b-86b1-4d640a9d1852",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 1199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "84429160-01f3-43e0-8a22-ecaf2221efa0",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "d5f5142d-f5cc-47cc-b06f-bde85f256325",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 3503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "8c66066b-e598-4bc0-9cb3-f859b1295415",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "4fc6820f-1455-4e12-a872-02b4b42d5e0a",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 685,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "87e00379-a9ae-44f7-97bc-91469d82a548",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 2138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "3618044a-1caa-4c22-95ef-b863298c8d7a",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1865,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "16f60c10-8c4e-43d7-8908-fd2c67b849c4",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "7a41e07e-2277-4731-adaa-dea07cbfecfe",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "16294e1c-64c2-4fd2-a343-c9ab1ef98fdb",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "eeabc53c-77a8-4af1-87ee-d1fd4f2cab85",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2394,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "3a667dd2-ec1b-45ed-b20d-fde8ffd916ac",
              "parentUUID": "c7e38bc7-9b03-42e2-934a-c41ddd8511c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9cac1f7-6eaa-4783-8afa-9a345d4f917b",
            "71cbdc99-e3b4-412b-9500-ab938e9b3ac4",
            "4059a4c3-0a0c-4b3b-86b1-4d640a9d1852",
            "84429160-01f3-43e0-8a22-ecaf2221efa0",
            "d5f5142d-f5cc-47cc-b06f-bde85f256325",
            "8c66066b-e598-4bc0-9cb3-f859b1295415",
            "4fc6820f-1455-4e12-a872-02b4b42d5e0a",
            "87e00379-a9ae-44f7-97bc-91469d82a548",
            "3618044a-1caa-4c22-95ef-b863298c8d7a",
            "16f60c10-8c4e-43d7-8908-fd2c67b849c4",
            "7a41e07e-2277-4731-adaa-dea07cbfecfe",
            "16294e1c-64c2-4fd2-a343-c9ab1ef98fdb",
            "eeabc53c-77a8-4af1-87ee-d1fd4f2cab85",
            "3a667dd2-ec1b-45ed-b20d-fde8ffd916ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0bcf0ffa-605e-43ac-9cf9-4b668582be8a",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\aliasing.spec.js",
      "file": "cypress\\integration\\examples\\aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8eba804b-57ae-4676-b231-155e1d8e51a9",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 1309,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "a1299b4d-54f1-4151-983d-e0f3fb9dee9f",
              "parentUUID": "8eba804b-57ae-4676-b231-155e1d8e51a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "21ffb871-4b8f-4de4-8951-db21cc81b8f9",
              "parentUUID": "8eba804b-57ae-4676-b231-155e1d8e51a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1299b4d-54f1-4151-983d-e0f3fb9dee9f",
            "21ffb871-4b8f-4de4-8951-db21cc81b8f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2722,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f817eec3-2a9c-4d4d-a3f1-0ca6d4a78bc8",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\assertions.spec.js",
      "file": "cypress\\integration\\examples\\assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c159a5e9-4df6-4627-bdb6-6c9ddc1bd0f6",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "50ed5723-8e4d-4f1c-9cef-4d371b5416a3",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 1893,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementâ€™s-text-contents",
                  "err": {},
                  "uuid": "07aef474-070a-4654-a6d0-8b9a769730fa",
                  "parentUUID": "50ed5723-8e4d-4f1c-9cef-4d371b5416a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 595,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "a27b9925-46d8-4ab2-87fe-38ceabb7fcd1",
                  "parentUUID": "50ed5723-8e4d-4f1c-9cef-4d371b5416a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07aef474-070a-4654-a6d0-8b9a769730fa",
                "a27b9925-46d8-4ab2-87fe-38ceabb7fcd1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2488,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f94d6648-191a-4229-bd5f-e7b939822eff",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 506,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "69ceb238-4b6f-45f9-8318-6d821a66b88a",
                  "parentUUID": "f94d6648-191a-4229-bd5f-e7b939822eff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 491,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should(function ($p) {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = $p.map(function (i, el) {\n    return Cypress.$(el).text();\n  }); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "86fad56c-ba3e-4913-8309-6458d7ee9118",
                  "parentUUID": "f94d6648-191a-4229-bd5f-e7b939822eff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 460,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should(function ($div) {\n  expect($div).to.have.length(1);\n  var className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "e5105580-9086-4d5c-94f8-9fa2ec55eebc",
                  "parentUUID": "f94d6648-191a-4229-bd5f-e7b939822eff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 474,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should(function ($div) {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  var className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  }\n});",
                  "err": {},
                  "uuid": "7e2821b5-88d8-4355-97ca-13307c69dfa6",
                  "parentUUID": "f94d6648-191a-4229-bd5f-e7b939822eff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 518,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function normalizeText(s) {\n  return s.replace(/\\s/g, '').toLowerCase();\n};\ncy.get('.two-elements').find('.first').then(function ($first) {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should(function ($div) {\n  // we can massage text before comparing\n  var secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "7f3d8725-a4b7-4ffa-a9ab-24aee7f4e3a5",
                  "parentUUID": "f94d6648-191a-4229-bd5f-e7b939822eff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 523,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "c3552088-b762-450d-9bbb-37118237c2eb",
                  "parentUUID": "f94d6648-191a-4229-bd5f-e7b939822eff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1961,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should(function ($div) {\n  var n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "a04f6b9c-845d-485c-ba47-13076d0deb36",
                  "parentUUID": "f94d6648-191a-4229-bd5f-e7b939822eff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69ceb238-4b6f-45f9-8318-6d821a66b88a",
                "86fad56c-ba3e-4913-8309-6458d7ee9118",
                "e5105580-9086-4d5c-94f8-9fa2ec55eebc",
                "7e2821b5-88d8-4355-97ca-13307c69dfa6",
                "7f3d8725-a4b7-4ffa-a9ab-24aee7f4e3a5",
                "c3552088-b762-450d-9bbb-37118237c2eb",
                "a04f6b9c-845d-485c-ba47-13076d0deb36"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4933,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7c637c7-4257-4c8c-8189-c3a939fdd7e4",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\connectors.spec.js",
      "file": "cypress\\integration\\examples\\connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b4103e20-ca27-4856-89c1-b8bffb6bdab5",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 888,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(function ($el, index, $list) {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "64bfdd65-ba49-4d0d-b67f-f80b7f32789c",
              "parentUUID": "b4103e20-ca27-4856-89c1-b8bffb6bdab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 520,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "5bccb431-3a91-43a7-b422-44a540e7bc68",
              "parentUUID": "b4103e20-ca27-4856-89c1-b8bffb6bdab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "908bcdc4-3b69-47df-bca5-1a0981fb716d",
              "parentUUID": "b4103e20-ca27-4856-89c1-b8bffb6bdab5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "8e8879bb-cb44-45e0-a13a-30156d985491",
              "parentUUID": "b4103e20-ca27-4856-89c1-b8bffb6bdab5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a29e62cf-d816-4486-bcea-be9747955c03",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 534,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then(function ($lis) {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "40432057-ba19-42d1-bf76-e5ec203169e8",
                  "parentUUID": "a29e62cf-d816-4486-bcea-be9747955c03",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 491,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1);\n  return 2;\n}).then(function (num) {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "564c30bc-06f3-424a-a20c-d65b541d157b",
                  "parentUUID": "a29e62cf-d816-4486-bcea-be9747955c03",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 441,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(function (num) {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "e38b7ec0-f9e5-43e4-a2d5-0addc6df637d",
                  "parentUUID": "a29e62cf-d816-4486-bcea-be9747955c03",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 458,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(function (num) {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "f444e35f-c38b-484b-b492-7835f7c114ad",
                  "parentUUID": "a29e62cf-d816-4486-bcea-be9747955c03",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40432057-ba19-42d1-bf76-e5ec203169e8",
                "564c30bc-06f3-424a-a20c-d65b541d157b",
                "e38b7ec0-f9e5-43e4-a2d5-0addc6df637d",
                "f444e35f-c38b-484b-b492-7835f7c114ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1924,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "64bfdd65-ba49-4d0d-b67f-f80b7f32789c",
            "5bccb431-3a91-43a7-b422-44a540e7bc68",
            "908bcdc4-3b69-47df-bca5-1a0981fb716d",
            "8e8879bb-cb44-45e0-a13a-30156d985491"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1a1c4586-5e4a-4d21-acf4-316d68f55dff",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cookies.spec.js",
      "file": "cypress\\integration\\examples\\cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7afbfe8a-6cc0-45f5-a021-250cbb8afcb6",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 1217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "872b1277-0c59-4fd3-827c-1376310bf7b4",
              "parentUUID": "7afbfe8a-6cc0-45f5-a021-250cbb8afcb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "8e7451bc-9fe9-4934-97a4-733968d7601f",
              "parentUUID": "7afbfe8a-6cc0-45f5-a021-250cbb8afcb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 560,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "ed831e91-8751-4790-bf70-099e0ce531d7",
              "parentUUID": "7afbfe8a-6cc0-45f5-a021-250cbb8afcb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "625ba1a3-0774-45a0-b642-d3bfffc17d30",
              "parentUUID": "7afbfe8a-6cc0-45f5-a021-250cbb8afcb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 687,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "5ac5599d-ee57-4dd0-9f35-c8f7274f2922",
              "parentUUID": "7afbfe8a-6cc0-45f5-a021-250cbb8afcb6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "872b1277-0c59-4fd3-827c-1376310bf7b4",
            "8e7451bc-9fe9-4934-97a4-733968d7601f",
            "ed831e91-8751-4790-bf70-099e0ce531d7",
            "625ba1a3-0774-45a0-b642-d3bfffc17d30",
            "5ac5599d-ee57-4dd0-9f35-c8f7274f2922"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b5df1b71-2464-4679-a778-ef9d20f39bbb",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cypress_api.spec.js",
      "file": "cypress\\integration\\examples\\cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3bea2e7-6058-4884-82cd-af82a2b76de8",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 779,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, function (subject, method) {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {// subject is still $button\n});",
              "err": {},
              "uuid": "40131ef1-bbfb-47ca-a49b-d22148d2f862",
              "parentUUID": "a3bea2e7-6058-4884-82cd-af82a2b76de8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40131ef1-bbfb-47ca-a49b-d22148d2f862"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 779,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "25326c77-78c4-4bd8-8f8e-28960036253d",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 582,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "3a7bd113-2a2e-4956-96c0-78767768492e",
              "parentUUID": "25326c77-78c4-4bd8-8f8e-28960036253d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "b9baed68-26b7-46b7-8b27-46011af817cc",
              "parentUUID": "25326c77-78c4-4bd8-8f8e-28960036253d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "e3397f3f-073a-4f2c-879b-2dd5e5888cf8",
              "parentUUID": "25326c77-78c4-4bd8-8f8e-28960036253d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a7bd113-2a2e-4956-96c0-78767768492e",
            "b9baed68-26b7-46b7-8b27-46011af817cc",
            "e3397f3f-073a-4f2c-879b-2dd5e5888cf8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1509,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4576cbc2-6296-4241-861f-24f8215b3428",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 383,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "f1495c99-3a4e-44cc-8e86-9f7ab8da43c2",
              "parentUUID": "4576cbc2-6296-4241-861f-24f8215b3428",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1495c99-3a4e-44cc-8e86-9f7ab8da43c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f437001-6ed2-4d7b-a3fb-07af50224983",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "3e889567-25e7-4b07-b912-e3a4904cf8ce",
              "parentUUID": "5f437001-6ed2-4d7b-a3fb-07af50224983",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e889567-25e7-4b07-b912-e3a4904cf8ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "248c5ffb-5b9a-4487-8513-a2a55022f9ad",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "d5cce3d4-4405-45c3-aa2d-c1a63d127fb5",
              "parentUUID": "248c5ffb-5b9a-4487-8513-a2a55022f9ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5cce3d4-4405-45c3-aa2d-c1a63d127fb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8275cd6d-bef0-43ea-85e8-03b8219a4545",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "59e6da9b-6a9e-4a1c-96be-51d1ea8324e6",
              "parentUUID": "8275cd6d-bef0-43ea-85e8-03b8219a4545",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59e6da9b-6a9e-4a1c-96be-51d1ea8324e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 447,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3027b5b-4bbb-4aa3-b9af-4d378b507f41",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "544b6227-f60c-47de-a4db-e61341db5044",
              "parentUUID": "b3027b5b-4bbb-4aa3-b9af-4d378b507f41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "544b6227-f60c-47de-a4db-e61341db5044"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 409,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c27921e-4f18-4618-987c-fef55419be05",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "550ce3b9-7c58-4cf9-af0b-980a958c01cd",
              "parentUUID": "1c27921e-4f18-4618-987c-fef55419be05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "550ce3b9-7c58-4cf9-af0b-980a958c01cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ebe6aa1-69bd-442e-9bbb-312bc0a3f6e1",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "40a778f1-33ae-4c23-94ad-81291f742b56",
              "parentUUID": "1ebe6aa1-69bd-442e-9bbb-312bc0a3f6e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40a778f1-33ae-4c23-94ad-81291f742b56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39b54c67-2a7a-4a3c-a26f-f8ba2c9e9787",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "c205ba58-eb57-4fe2-91d5-39dbcf809a77",
              "parentUUID": "39b54c67-2a7a-4a3c-a26f-f8ba2c9e9787",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c205ba58-eb57-4fe2-91d5-39dbcf809a77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "21130163-274f-4352-8127-c38662c39a46",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\files.spec.js",
      "file": "cypress\\integration\\examples\\files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2986bf49-9b4f-41ec-b277-3571bb701bfb",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 1719,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "04f0f365-755a-4891-8c17-40367de16fd9",
              "parentUUID": "2986bf49-9b4f-41ec-b277-3571bb701bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 555,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "b223364e-0a61-4969-9a73-8441a0fec4e8",
              "parentUUID": "2986bf49-9b4f-41ec-b277-3571bb701bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "597cbb03-0cc1-4f37-899f-212e44a1404f",
              "parentUUID": "2986bf49-9b4f-41ec-b277-3571bb701bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 845,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(function (users) {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(function (profile) {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "b0db0d29-f486-4399-9cce-29f767566f9e",
              "parentUUID": "2986bf49-9b4f-41ec-b277-3571bb701bfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04f0f365-755a-4891-8c17-40367de16fd9",
            "b223364e-0a61-4969-9a73-8441a0fec4e8",
            "597cbb03-0cc1-4f37-899f-212e44a1404f",
            "b0db0d29-f486-4399-9cce-29f767566f9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3567,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "12791eec-8951-4512-a903-fffcc29f661c",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\local_storage.spec.js",
      "file": "cypress\\integration\\examples\\local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d6bbc306-2df2-4270-8062-52aebbed03ee",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 1936,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.be[\"null\"];\n}); // Clear key matching string in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage('prop1').should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "905b7100-32da-4907-a06d-016901f31dd4",
              "parentUUID": "d6bbc306-2df2-4270-8062-52aebbed03ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "905b7100-32da-4907-a06d-016901f31dd4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4637825a-1ce3-4d72-83e1-c8c95098c9f1",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\location.spec.js",
      "file": "cypress\\integration\\examples\\location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c7432ef-150e-4ed7-96af-70d3035cdd78",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "846e6bb8-5696-45ca-a977-1c1901011c4f",
              "parentUUID": "9c7432ef-150e-4ed7-96af-70d3035cdd78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "f001ea53-f2aa-4a9d-8d6f-b9a893c1375c",
              "parentUUID": "9c7432ef-150e-4ed7-96af-70d3035cdd78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "8b72e398-efd0-4c0c-b705-7288f9d9c219",
              "parentUUID": "9c7432ef-150e-4ed7-96af-70d3035cdd78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "846e6bb8-5696-45ca-a977-1c1901011c4f",
            "f001ea53-f2aa-4a9d-8d6f-b9a893c1375c",
            "8b72e398-efd0-4c0c-b705-7288f9d9c219"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1499,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fef00fa7-7ec5-4ad2-ac6f-dc578cd03012",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\misc.spec.js",
      "file": "cypress\\integration\\examples\\misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34f12240-454c-4b68-b7af-43152f7200b2",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 1151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "3ce0ea77-0d18-4c84-b57b-1dd75506180f",
              "parentUUID": "34f12240-454c-4b68-b7af-43152f7200b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 786,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \".concat(Cypress.platform, \" architecture \").concat(Cypress.arch)); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nvar isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "d8696277-bff3-4803-ad32-d525365bba1e",
              "parentUUID": "34f12240-454c-4b68-b7af-43152f7200b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "4bcff1c7-9fbc-4549-a63a-a33912403b67",
              "parentUUID": "34f12240-454c-4b68-b7af-43152f7200b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "598f3664-2c05-480a-bcd3-9ed30fa39c4d",
              "parentUUID": "34f12240-454c-4b68-b7af-43152f7200b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "25ad0874-2bf9-4522-ba49-91d685f7904b",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 3395,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"Screenshot\",\n  \"value\": \"screenshots\\\\examples\\\\misc.spec.js\\\\my-image.png\"\n}",
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "e0d8766d-1690-483a-83bc-c089dd93cb30",
                  "parentUUID": "25ad0874-2bf9-4522-ba49-91d685f7904b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 358,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot: function onBeforeScreenshot() {},\n  onAfterScreenshot: function onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "c7fc6287-9324-4b92-9cc7-833e773a129e",
                  "parentUUID": "25ad0874-2bf9-4522-ba49-91d685f7904b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0d8766d-1690-483a-83bc-c089dd93cb30",
                "c7fc6287-9324-4b92-9cc7-833e773a129e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3753,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "3ce0ea77-0d18-4c84-b57b-1dd75506180f",
            "d8696277-bff3-4803-ad32-d525365bba1e",
            "4bcff1c7-9fbc-4549-a63a-a33912403b67",
            "598f3664-2c05-480a-bcd3-9ed30fa39c4d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "498c5b9e-0dc3-4305-a7b3-2f3e5d0b42a7",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\navigation.spec.js",
      "file": "cypress\\integration\\examples\\navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "92fb3827-becb-42ac-ab60-51fa28efc0ff",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 2606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "bafe86dd-cad4-46bd-95a2-92a8b2181861",
              "parentUUID": "92fb3827-becb-42ac-ab60-51fa28efc0ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 1314,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "df312ff1-d07c-43b2-930e-797b2ee1422e",
              "parentUUID": "92fb3827-becb-42ac-ab60-51fa28efc0ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 1202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad: function onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  },\n  onLoad: function onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  }\n});",
              "err": {},
              "uuid": "a9548cdd-341a-4029-af2b-6316c7ad1a0d",
              "parentUUID": "92fb3827-becb-42ac-ab60-51fa28efc0ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bafe86dd-cad4-46bd-95a2-92a8b2181861",
            "df312ff1-d07c-43b2-930e-797b2ee1422e",
            "a9548cdd-341a-4029-af2b-6316c7ad1a0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5122,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "03c49446-cec2-4a59-b30b-6a2cc99a7794",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\network_requests.spec.js",
      "file": "cypress\\integration\\examples\\network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b9af007-9bbe-4067-9051-4099d56d9b44",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(function (response) {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "48cb5fed-7fba-4a91-9386-c65e2271d479",
              "parentUUID": "9b9af007-9bbe-4067-9051-4099d56d9b44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 1878,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(function (response) {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "36941b6a-c9f7-4e47-9dcd-2f340859c07b",
              "parentUUID": "9b9af007-9bbe-4067-9051-4099d56d9b44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 676,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "f24a547d-f226-4d71-8443-cfd268ce4dda",
              "parentUUID": "9b9af007-9bbe-4067-9051-4099d56d9b44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 843,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(function (user) {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(function (response) {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "74663a37-9324-418a-90fd-551de1306e72",
              "parentUUID": "9b9af007-9bbe-4067-9051-4099d56d9b44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE ðŸ‘€\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "d5b36885-b222-404a-88ab-dec2a9c54a34",
              "parentUUID": "9b9af007-9bbe-4067-9051-4099d56d9b44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nvar message = 'whoa, this comment does not exist'; // Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(function (_ref) {\n  var request = _ref.request,\n      response = _ref.response;\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "974e4fe9-03ae-4838-8bb1-6dea76c12332",
              "parentUUID": "9b9af007-9bbe-4067-9051-4099d56d9b44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48cb5fed-7fba-4a91-9386-c65e2271d479",
            "36941b6a-c9f7-4e47-9dcd-2f340859c07b",
            "f24a547d-f226-4d71-8443-cfd268ce4dda",
            "74663a37-9324-418a-90fd-551de1306e72",
            "d5b36885-b222-404a-88ab-dec2a9c54a34",
            "974e4fe9-03ae-4838-8bb1-6dea76c12332"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7516,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a03e0275-40ff-4260-ae46-921a387d0c1c",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\querying.spec.js",
      "file": "cypress\\integration\\examples\\querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a15bc726-63d7-457a-b225-809494e2daec",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 1361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "5048e1cd-eefd-4d43-af2d-15742c2408bd",
              "parentUUID": "a15bc726-63d7-457a-b225-809494e2daec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 767,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "0895b15f-ef8c-4455-86cc-6860ef4b61db",
              "parentUUID": "a15bc726-63d7-457a-b225-809494e2daec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "86910ede-d953-4034-a879-287b04edf845",
              "parentUUID": "a15bc726-63d7-457a-b225-809494e2daec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(function () {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "b8e5451d-27e8-4de3-95e8-323ee909bbd3",
              "parentUUID": "a15bc726-63d7-457a-b225-809494e2daec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 1370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "2497ac9b-3aad-4beb-88c2-26b4c66b856c",
              "parentUUID": "a15bc726-63d7-457a-b225-809494e2daec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5048e1cd-eefd-4d43-af2d-15742c2408bd",
            "0895b15f-ef8c-4455-86cc-6860ef4b61db",
            "86910ede-d953-4034-a879-287b04edf845",
            "b8e5451d-27e8-4de3-95e8-323ee909bbd3",
            "2497ac9b-3aad-4beb-88c2-26b4c66b856c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4517,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6553b616-15b0-4dbb-9ad3-4c4fca7698fe",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "file": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "969fd298-6048-4f6e-b5be-56a4f222cf60",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 911,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  foo: function foo() {}\n};\nvar spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "8c4777c9-2632-4624-a9ca-fad373e763f4",
              "parentUUID": "969fd298-6048-4f6e-b5be-56a4f222cf60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo: function foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(function () {\n  obj.foo('first');\n}, 500);\nsetTimeout(function () {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "a0f589f1-c860-4d60-8af3-9993bf493d0d",
              "parentUUID": "969fd298-6048-4f6e-b5be-56a4f222cf60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo: function foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nvar stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "69ca2ccf-2988-4adc-af84-8318672f73d8",
              "parentUUID": "969fd298-6048-4f6e-b5be-56a4f222cf60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "71e2df42-6871-4515-bcba-fb4e2fc27056",
              "parentUUID": "969fd298-6048-4f6e-b5be-56a4f222cf60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 742,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "48e9f3f4-d9c8-4086-a796-8396a2a951b4",
              "parentUUID": "969fd298-6048-4f6e-b5be-56a4f222cf60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet: function greet(name) {\n    return \"Hello, \".concat(name, \"!\");\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number)[\"throws\"](new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi'); // @ts-ignore\nexpect(function () {\n  return greeter.greet(42);\n}).to[\"throw\"]('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "f423e230-71b8-4e9a-9195-5aee73c07b32",
              "parentUUID": "969fd298-6048-4f6e-b5be-56a4f222cf60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add: function add(a, b) {\n    return a + b;\n  }\n};\nvar spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match[\"in\"]([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nvar isEven = function isEven(x) {\n  return x % 2 === 0;\n}; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nvar isGreaterThan = function isGreaterThan(limit) {\n  return function (x) {\n    return x > limit;\n  };\n};\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nvar isLessThan = function isLessThan(limit) {\n  return function (x) {\n    return x < limit;\n  };\n}; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nvar M = Cypress.sinon.match;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "53488159-2f91-44a1-81b3-8dc8145d5075",
              "parentUUID": "969fd298-6048-4f6e-b5be-56a4f222cf60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c4777c9-2632-4624-a9ca-fad373e763f4",
            "a0f589f1-c860-4d60-8af3-9993bf493d0d",
            "69ca2ccf-2988-4adc-af84-8318672f73d8",
            "71e2df42-6871-4515-bcba-fb4e2fc27056",
            "48e9f3f4-d9c8-4086-a796-8396a2a951b4",
            "f423e230-71b8-4e9a-9195-5aee73c07b32",
            "53488159-2f91-44a1-81b3-8dc8145d5075"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5568,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "66a27b8d-4397-41ee-aa31-76e653984785",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\traversal.spec.js",
      "file": "cypress\\integration\\examples\\traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 1092,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "ec527cb8-410f-471e-a555-b040e146157e",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "8eb378cd-4b58-44b0-abff-1e15eede5444",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "29ed3db6-963e-4ad4-b15d-65d2f3f02db5",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 483,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "6bbb9b2d-2fa2-4a7f-8142-1c650b8a8ba2",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 547,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "a3959f93-85fe-4c08-ae29-a190863ce721",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "87b8bfa7-ce06-4cd7-8110-de929b93a899",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "c2375b73-09b7-476d-9189-873a43702091",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "735d7cb1-9d0d-430b-9567-ae896564dea1",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "5172b5a9-c314-4d28-ac3a-455d5ad52c26",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 558,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "a6da86cb-51f0-4e1c-8c31-255b1ee61071",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 513,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "d3b9e12d-b71d-4ce5-9c1c-0fde0fa185c7",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "592dc993-2128-4f1e-b411-07be7631d89d",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "3c51260c-095a-4319-bce5-398e2a62c1e1",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "f25b6438-ba7e-4bba-aae1-685b3e032e9d",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "a2b1d035-a6fb-43ef-a53d-a622432efe60",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "c93ae905-97f4-4b6b-aeab-44f01caf15c5",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "b1ab92c0-3adc-43a9-bd51-62d95ebfe046",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "dc2fe420-3847-40db-84f4-b51b0a085c98",
              "parentUUID": "8e14fc90-3884-4f64-8d7b-fd56904698ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec527cb8-410f-471e-a555-b040e146157e",
            "8eb378cd-4b58-44b0-abff-1e15eede5444",
            "29ed3db6-963e-4ad4-b15d-65d2f3f02db5",
            "6bbb9b2d-2fa2-4a7f-8142-1c650b8a8ba2",
            "a3959f93-85fe-4c08-ae29-a190863ce721",
            "87b8bfa7-ce06-4cd7-8110-de929b93a899",
            "c2375b73-09b7-476d-9189-873a43702091",
            "735d7cb1-9d0d-430b-9567-ae896564dea1",
            "5172b5a9-c314-4d28-ac3a-455d5ad52c26",
            "a6da86cb-51f0-4e1c-8c31-255b1ee61071",
            "d3b9e12d-b71d-4ce5-9c1c-0fde0fa185c7",
            "592dc993-2128-4f1e-b411-07be7631d89d",
            "3c51260c-095a-4319-bce5-398e2a62c1e1",
            "f25b6438-ba7e-4bba-aae1-685b3e032e9d",
            "a2b1d035-a6fb-43ef-a53d-a622432efe60",
            "c93ae905-97f4-4b6b-aeab-44f01caf15c5",
            "b1ab92c0-3adc-43a9-bd51-62d95ebfe046",
            "dc2fe420-3847-40db-84f4-b51b0a085c98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "807b91d8-ebcc-4b65-84d5-a80630fd6241",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\utilities.spec.js",
      "file": "cypress\\integration\\examples\\utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d961eb7-a5e5-4d48-8d27-c09979d8570e",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1048,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  var ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "48218141-8c31-4184-94bb-2060f86a4a2e",
              "parentUUID": "6d961eb7-a5e5-4d48-8d27-c09979d8570e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "6d773f16-3321-4e1d-bd64-fbe848440b18",
              "parentUUID": "6d961eb7-a5e5-4d48-8d27-c09979d8570e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 905,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(function (dataUrl) {\n    // create an <img> element and set its src to the dataUrl\n    var img = Cypress.$('<img />', {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "1d2b0584-2ecf-415f-9822-9fa4b64936bf",
              "parentUUID": "6d961eb7-a5e5-4d48-8d27-c09979d8570e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 576,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be[\"true\"];\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"false\"]; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"true\"]; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be[\"false\"];",
              "err": {},
              "uuid": "7da568b1-2459-4afb-8722-a9c08d35b458",
              "parentUUID": "6d961eb7-a5e5-4d48-8d27-c09979d8570e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.moment() - format or parse dates using a moment method",
              "fullTitle": "Utilities Cypress.moment() - format or parse dates using a moment method",
              "timedOut": null,
              "duration": 527,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/moment\nvar time = Cypress.moment('2014-04-25T19:38:53.196Z').utc().format('h:mm A');\nexpect(time).to.be.a('string');\ncy.get('.utility-moment').contains('3:38 PM').should('have.class', 'badge'); // the time in the element should be between 3pm and 5pm\nvar start = Cypress.moment('3:00 PM', 'LT');\nvar end = Cypress.moment('5:00 PM', 'LT');\ncy.get('.utility-moment .badge').should(function ($el) {\n  // parse American time like \"3:38 PM\"\n  var m = Cypress.moment($el.text().trim(), 'LT'); // display hours + minutes + AM|PM\n  var f = 'h:mm A';\n  expect(m.isBetween(start, end), \"\".concat(m.format(f), \" should be between \").concat(start.format(f), \" and \").concat(end.format(f))).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "00520b5a-c955-4f3c-9ff1-91c60805fc68",
              "parentUUID": "6d961eb7-a5e5-4d48-8d27-c09979d8570e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise(function (resolve, reject) {\n    setTimeout(function () {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(function () {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(function (str) {\n    expect(str).to.eq('foo');\n    expect(waited).to.be[\"true\"];\n  });\n});",
              "err": {},
              "uuid": "d3fb7056-c823-4412-8072-30afc21c51c7",
              "parentUUID": "6d961eb7-a5e5-4d48-8d27-c09979d8570e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48218141-8c31-4184-94bb-2060f86a4a2e",
            "6d773f16-3321-4e1d-bd64-fbe848440b18",
            "1d2b0584-2ecf-415f-9822-9fa4b64936bf",
            "7da568b1-2459-4afb-8722-a9c08d35b458",
            "00520b5a-c955-4f3c-9ff1-91c60805fc68",
            "d3fb7056-c823-4412-8072-30afc21c51c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5056,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7650c994-a303-43ed-86a0-3d835b26d906",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\viewport.spec.js",
      "file": "cypress\\integration\\examples\\viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d3ac886-ae7b-4883-b41c-bea74074189a",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 4190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "109fbac1-a76c-443a-9a5f-47ec98b9fdc8",
              "parentUUID": "1d3ac886-ae7b-4883-b41c-bea74074189a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "109fbac1-a76c-443a-9a5f-47ec98b9fdc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4190,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "577463b4-6858-41e7-8f93-7ee13adcd521",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\waiting.spec.js",
      "file": "cypress\\integration\\examples\\waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5596d4fa-83d1-4fa8-ba84-deaf14224a79",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 6244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "9862b2a4-846c-4de7-8d08-6e9e058e9529",
              "parentUUID": "5596d4fa-83d1-4fa8-ba84-deaf14224a79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 1182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "20a85c75-3b0e-4104-8e94-cbafdf1c989c",
              "parentUUID": "5596d4fa-83d1-4fa8-ba84-deaf14224a79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9862b2a4-846c-4de7-8d08-6e9e058e9529",
            "20a85c75-3b0e-4104-8e94-cbafdf1c989c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7426,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c6544ea1-5e22-4260-a026-4b0fda52a29e",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\window.spec.js",
      "file": "cypress\\integration\\examples\\window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ae9c3e0c-17e2-400c-8bd5-09369d818787",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "a22916a2-ad10-4458-aa47-4aa9299a53fe",
              "parentUUID": "ae9c3e0c-17e2-400c-8bd5-09369d818787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "d71f1adf-44bb-4f7f-a729-df7cbd375f99",
              "parentUUID": "ae9c3e0c-17e2-400c-8bd5-09369d818787",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "31ceab37-2791-4bfa-a187-9d3349d35816",
              "parentUUID": "ae9c3e0c-17e2-400c-8bd5-09369d818787",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a22916a2-ad10-4458-aa47-4aa9299a53fe",
            "d71f1adf-44bb-4f7f-a729-df7cbd375f99",
            "31ceab37-2791-4bfa-a187-9d3349d35816"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a47c3d47-1619-4aaf-80b6-09179ccd7351",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\amazonSample.js",
      "file": "cypress\\integration\\tracktik\\amazonSample.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Validate elements on the landing page",
          "fullTitle": "Validate elements on the landing page",
          "timedOut": null,
          "duration": 15143,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var url = 'https://www.amazon.ca//';\nvar amazonLogo = '#nav-logo-sprites'; //Visit Amazon.ca\ncy.visit(url); //Amazon Logo should be displayed\ncy.get(amazonLogo).should('be.visible'); //Search bar should be displayed\ncy.get('#nav-search').should('be.visible').click(); //Country/Location flag should be displayed\ncy.get('.icp-nav-flag').should('be.visible'); //Hello message should be displayed\ncy.get('#nav-global-location-popover-link').should('be.visible'); //Accounts text should be displayed\ncy.get('#nav-link-accountList').should('be.visible'); //Orders and returns\ncy.get('#nav-orders').should('be.visible'); //Shopping Cart Icon\ncy.get('.nav-cart-icon').should('be.visible'); // All Menu Bar\ncy.get('#nav-hamburger-menu').should('be.visible'); //BestSellers\ncy.get('[href=\"/Best-Sellers-generic/zgbs/?ref_=nav_cs_bestsellers_63ca45fd42734a1a90e55e964c1a4be0\"]').should('be.visible'); //Gift Ideas\ncy.get('[href=\"/gcx/-/gfhz/?ref_=nav_cs_giftfinder_192be93f79264d46933b55cd454cfadf\"]').should('be.visible'); //Prime\ncy.get('#nav-link-prime > :nth-child(1)').should('be.visible'); //New Releases\ncy.get('[href=\"/gp/new-releases/?ref_=nav_cs_newreleases_3700f09c268c435e83b755749c4fc4e9\"]').should('be.visible'); //Customer Service\ncy.get('[href=\"/gp/help/customer/display.html?ref_=nav_cs_help_91eafdc699444f9c9ab412df262cc693\"]').should('be.visible'); //Slider\ncy.get('.cropped-image-map-size > .cropped-image-map-center-alignment > span > .a-link-normal > img').should('be.visible'); //Search for a particular item\ncy.get('#nav-search').type('Apple'); //Click on Account to sign in\ncy.get('#nav-link-accountList').click(); //Verify amazon logo is visible\ncy.get('.a-icon-logo').should('be.visible'); //Verify sign in page is visible\ncy.get('.a-padding-extra-large').should('be.visible'); //Verify username field is visible\ncy.get('#ap_email').should('be.visible'); //Verify username field is editable\ncy.get('#ap_email').should('be.enabled'); //verify create account button is visible\ncy.get('#createAccountSubmit').should('be.visible'); //verify continue button is visible\ncy.get('.a-button-inner > #continue').should('be.visible').click(); //Enter Username\ncy.get('#ap_email').type('dhavaldesai1609@gmail.com'); //Click on continue button\ncy.get('.a-button-inner > #continue').should('be.visible').click(); //Verify username field is visible\ncy.get('#ap_password').should('be.visible'); //Verify username field is editable\ncy.get('#ap_password').should('be.enabled'); //Enter Password\ncy.get('#ap_password').type('neverShareYourPassword@123'); //Verify sign in button\ncy.get('#signInSubmit').should('be.visible'); //Click on sign in button\ncy.get('#signInSubmit').click();",
          "err": {},
          "uuid": "21687173-c199-4b7f-bd00-df83e512b368",
          "parentUUID": "a47c3d47-1619-4aaf-80b6-09179ccd7351",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "21687173-c199-4b7f-bd00-df83e512b368"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 15143,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "abb27b36-e73d-4b69-888e-38a9ed0a26a1",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\Zensurance Test 1.js",
      "file": "cypress\\integration\\tracktik\\Zensurance Test 1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Check unrecognized industry in search results in error message",
          "fullTitle": "Check unrecognized industry in search results in error message",
          "timedOut": null,
          "duration": 12668,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\tracktik\\\\Zensurance Test 1.js\\\\Check unrecognized industry in search results in error message (failed).png\"\n}",
          "code": "//Visit the Demo QA Website\ncy.visit(\"https://app.zensurance.com/quote\"); //Enter the search criteria for the field 'Industry'\ncy.get('.sc-hMqMXs').type('faw'); //Verify that there are no search results except the error message\ncy.get('.pin-b > .text-base').should('have.length', 1); //Click on the next button\ncy.get('[data-testid=next-button]').click(); //Ensure that the error message 'Please select an industry' is displayed\ncy.get('.text-xs').should('have.text', 'Please select an industry'); //Ensure that the error message 'There are a few errors above' is displayed\ncy.get('[id=qid-101801]').should('have.text', 'There are a few errors above');",
          "err": {
            "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.\n    at Context.eval (https://app.zensurance.com/__cypress/tests?p=cypress\\integration\\tracktik\\Zensurance%20Test%201.js:104:6)",
            "diff": null
          },
          "uuid": "0a888459-6ce3-4752-a67c-e442115b57a4",
          "parentUUID": "abb27b36-e73d-4b69-888e-38a9ed0a26a1",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "0a888459-6ce3-4752-a67c-e442115b57a4"
      ],
      "pending": [],
      "skipped": [],
      "duration": 12668,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "4eaffed8-fcfa-4108-8931-e892ff353454",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\Zensurance Test 2.js",
      "file": "cypress\\integration\\tracktik\\Zensurance Test 2.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "fullTitle": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "timedOut": null,
          "duration": 12398,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\tracktik\\\\Zensurance Test 2.js\\\\A user enters an invalid email address, and the user is unable to proceed to the next page (failed).png\"\n}",
          "code": "//Visit the Demo QA Website\ncy.visit(\"https://app.zensurance.com/quote\"); //Enter the search criteria for the field 'Industry' as cons\ncy.get('.sc-hMqMXs').type('cons'); //Ensure that the item Construction contractors is displayed in search result\ncy.get('#main-content').find('ul').contains('Construction contractors'); //Ensure that the item General Contractor, Subcontractor is displayed in search result\ncy.get('#main-content').find('ul').contains('General Contractor, Subcontractor'); //Click on the first search result\ncy.get('#main-content').find('ul').contains('Construction contractors').click(); // Select $70000 from the Revenue Slider\ncy.get('[style=\"left: 18.3673%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click(); //Assert text value displayed on slider. \ncy.get('#hook-revenueLastFinancialYear > .px-5').should('contain.text', '$70,000'); //Select Yes for Was all your Gross Revenue from Canada?\ncy.get('[for=\"revenueLastFinancialYearFromCanadayes\"] > .sc-kgoBCf').click(); //Click on the next button\ncy.get('[data-testid=next-button]').click(); //Select $90000 from the Revenue Slider\ncy.get('[style=\"left: 18.3673%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click(); //Select Yes for Was all your Gross Revenue from Canada?\ncy.get('[for=\"projectedRevenueCurrentFinancialYearFromCanadayes\"] > .sc-kgoBCf').click(); //Click on the next button\ncy.get('[data-testid=next-button]').click(); //Enter Invalid Email Address\ncy.get('.sc-hMqMXs').type('asdf@u4fb2'); //Click on the next button\ncy.get('[data-testid=next-button]').click(); //Ensure that the error message 'Please enter a valid email address (ex: john@example.com)' is displayed\ncy.get('.text-xs').should('have.text', 'Please enter a valid email address (ex: john@example.com)'); //Ensure that the error message 'There are a few errors above' is displayed\ncy.get('[data-comp=error-wrapper]').should('have.text', 'There are a few errors above');",
          "err": {
            "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.\n    at Context.eval (https://app.zensurance.com/__cypress/tests?p=cypress\\integration\\tracktik\\Zensurance%20Test%202.js:104:6)",
            "diff": null
          },
          "uuid": "343b628b-bbe3-4fb2-8d4f-e7aa3a07fa6f",
          "parentUUID": "4eaffed8-fcfa-4108-8931-e892ff353454",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "343b628b-bbe3-4fb2-8d4f-e7aa3a07fa6f"
      ],
      "pending": [],
      "skipped": [],
      "duration": 12398,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "0d15aec6-2b00-4a2e-b97b-0caa6ea1ebdc",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\Zensurance Test 3.js",
      "file": "cypress\\integration\\tracktik\\Zensurance Test 3.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "fullTitle": "A user enters an invalid email address, and the user is unable to proceed to the next page",
          "timedOut": null,
          "duration": 10707,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "{\n  \"title\": \"Failed screenshot\",\n  \"value\": \"screenshots\\\\tracktik\\\\Zensurance Test 3.js\\\\A user enters an invalid email address, and the user is unable to proceed to the next page (failed).png\"\n}",
          "code": "//Visit the Demo QA Website\ncy.visit(\"https://app.zensurance.com/quote\"); //Enter the search criteria for the field 'Industry' as cons\ncy.get('.sc-hMqMXs').type('cons'); //Ensure that the item Construction contractors is displayed in search result\ncy.get('#main-content').find('ul').contains('Construction contractors'); //Ensure that the item General Contractor, Subcontractor is displayed in search result\ncy.get('#main-content').find('ul').contains('General Contractor, Subcontractor'); //Click on the first search result\ncy.get('#main-content').find('ul').contains('Construction contractors').click(); // Select $70000 from the Revenue Slider\ncy.get('[style=\"left: 18.3673%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click(); //Assert text value displayed on slider. \ncy.get('#hook-revenueLastFinancialYear > .px-5').should('contain.text', '$70,000'); //Select No for Was all your Gross Revenue from Canada? \ncy.get('[for=\"revenueLastFinancialYearFromCanadano\"] > .sc-kgoBCf').click(); //Select 40% for Canada\ncy.get(':nth-child(4) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 40%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click(); //Select 30% for USA\ncy.get(':nth-child(5) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 30%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click(); //Select 30% Western Europe\ncy.get(':nth-child(6) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 30%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click(); //Select 10% for Other\ncy.get(':nth-child(7) > .px-5 > .rc-slider > .rc-slider-step > [style=\"left: 10%; background-color: rgb(255, 255, 255); border: 0px; bottom: -6px;\"]').click(); //Click on the next button\ncy.get('[data-testid=next-button]').click(); //Ensure that the error message 'Total must equal 100%' is displayed\ncy.get('.mt-3 > :nth-child(1) > .frame-me').should('have.text', 'Total must equal 100%'); //Ensure that the total is greater than 100%\ncy.get('.Text-LG').should('have.text', '110%'); //Ensure that the error message 'There are a few errors above' is displayed\ncy.get('[data-comp=error-wrapper]').should('have.text', 'There are a few errors above');",
          "err": {
            "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.",
            "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.sc-hMqMXs`, but never found it.\n    at Context.eval (https://app.zensurance.com/__cypress/tests?p=cypress\\integration\\tracktik\\Zensurance%20Test%203.js:104:6)",
            "diff": null
          },
          "uuid": "5d2031b2-5336-431c-95cd-5d3c20f7571e",
          "parentUUID": "0d15aec6-2b00-4a2e-b97b-0caa6ea1ebdc",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "5d2031b2-5336-431c-95cd-5d3c20f7571e"
      ],
      "pending": [],
      "skipped": [],
      "duration": 10707,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "71caf999-1a50-478e-9937-c30a738a5ac3",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\actions.spec.js",
      "file": "cypress\\integration\\examples\\actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 5940,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "d3d94887-281d-4a5b-a2ff-69d6e47989c3",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "3e91010a-6167-4386-a8be-5d7f86c87ddc",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 1117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "c2050993-4a38-4080-8c76-ccad7ef067ab",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 1342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "5236fdcc-7ce8-4017-80ac-a817968b526a",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 1005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "fc11beac-3b72-4519-8bb5-4807d126954a",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 4109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "dc5f7ff0-7486-4170-97c5-d1907bd740e0",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 648,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "099639dc-079b-4b72-913d-e5ef5b3ba97f",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 842,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "a02c43b8-5d31-4f7c-a5c0-5a67231c50d8",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "fa844902-bb34-4e3a-af24-10c12a1b81e3",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1856,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "d65809ec-bc9b-4c2d-9b4f-ce848f95e59a",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1772,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "e3b4975e-722f-44c5-91f5-d37e29ba1927",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "c7012ea8-6914-4293-bbfa-9356ba131d68",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "2d058d93-1862-42c0-9486-74731a880c05",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "f206ac98-1890-4530-ba45-4d40462de6f4",
              "parentUUID": "fbe6b686-e9f8-4c23-b1e7-53b9dc8fdac5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3d94887-281d-4a5b-a2ff-69d6e47989c3",
            "3e91010a-6167-4386-a8be-5d7f86c87ddc",
            "c2050993-4a38-4080-8c76-ccad7ef067ab",
            "5236fdcc-7ce8-4017-80ac-a817968b526a",
            "fc11beac-3b72-4519-8bb5-4807d126954a",
            "dc5f7ff0-7486-4170-97c5-d1907bd740e0",
            "099639dc-079b-4b72-913d-e5ef5b3ba97f",
            "a02c43b8-5d31-4f7c-a5c0-5a67231c50d8",
            "fa844902-bb34-4e3a-af24-10c12a1b81e3",
            "d65809ec-bc9b-4c2d-9b4f-ce848f95e59a",
            "e3b4975e-722f-44c5-91f5-d37e29ba1927",
            "c7012ea8-6914-4293-bbfa-9356ba131d68",
            "2d058d93-1862-42c0-9486-74731a880c05",
            "f206ac98-1890-4530-ba45-4d40462de6f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25111,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4924cc69-f61c-4094-8d68-8d6551482663",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\aliasing.spec.js",
      "file": "cypress\\integration\\examples\\aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd6df9af-9d47-4fa5-872d-f249ac202e03",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 1159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "a47b404d-95d8-4f56-90e9-1527addfd322",
              "parentUUID": "dd6df9af-9d47-4fa5-872d-f249ac202e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "d3c3ad91-b54c-4838-a450-7167c7d62623",
              "parentUUID": "dd6df9af-9d47-4fa5-872d-f249ac202e03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a47b404d-95d8-4f56-90e9-1527addfd322",
            "d3c3ad91-b54c-4838-a450-7167c7d62623"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2458,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "66504aa6-4f56-416b-a490-eeb1c0504159",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\assertions.spec.js",
      "file": "cypress\\integration\\examples\\assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "23d70dc7-683f-4853-903d-4d97c520933c",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ba60f27a-41a0-4b5e-bb4d-5eb47da71825",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 1185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementâ€™s-text-contents",
                  "err": {},
                  "uuid": "8cda9aed-c406-4fc5-b62b-d305453da79d",
                  "parentUUID": "ba60f27a-41a0-4b5e-bb4d-5eb47da71825",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 552,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "1b8af9ae-3771-4985-aed1-62927758b76e",
                  "parentUUID": "ba60f27a-41a0-4b5e-bb4d-5eb47da71825",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8cda9aed-c406-4fc5-b62b-d305453da79d",
                "1b8af9ae-3771-4985-aed1-62927758b76e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1737,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 573,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "b768b9c0-08e4-47ae-841e-ab6bbbc4081f",
                  "parentUUID": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 544,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should(function ($p) {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = $p.map(function (i, el) {\n    return Cypress.$(el).text();\n  }); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "5360a21d-cfb6-49b9-a7ad-718ba73c2990",
                  "parentUUID": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 538,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should(function ($div) {\n  expect($div).to.have.length(1);\n  var className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "bc1ac0d5-d753-45e1-80a3-fd440a33d6df",
                  "parentUUID": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 517,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should(function ($div) {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  var className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  }\n});",
                  "err": {},
                  "uuid": "936a4617-ce74-43d4-8300-b12f1131e0c4",
                  "parentUUID": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 514,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function normalizeText(s) {\n  return s.replace(/\\s/g, '').toLowerCase();\n};\ncy.get('.two-elements').find('.first').then(function ($first) {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should(function ($div) {\n  // we can massage text before comparing\n  var secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "9947999a-ae0b-4903-99f6-caa3546a7b17",
                  "parentUUID": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 484,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "5f70424a-9078-428f-81e9-602310ae3ef0",
                  "parentUUID": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1900,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should(function ($div) {\n  var n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "cbd73f05-b0e5-4172-8a6b-f63ca7cbbbbd",
                  "parentUUID": "cc66b134-81f6-438f-baf6-faf4ed1aa266",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b768b9c0-08e4-47ae-841e-ab6bbbc4081f",
                "5360a21d-cfb6-49b9-a7ad-718ba73c2990",
                "bc1ac0d5-d753-45e1-80a3-fd440a33d6df",
                "936a4617-ce74-43d4-8300-b12f1131e0c4",
                "9947999a-ae0b-4903-99f6-caa3546a7b17",
                "5f70424a-9078-428f-81e9-602310ae3ef0",
                "cbd73f05-b0e5-4172-8a6b-f63ca7cbbbbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5070,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "691131eb-8ca9-4324-9577-6d82c06e75dd",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\connectors.spec.js",
      "file": "cypress\\integration\\examples\\connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a9c6acec-c0fb-43f3-9e5f-8b7a21b76a21",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(function ($el, index, $list) {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "4f2fbf47-bc26-432a-bafe-ae98d6c01901",
              "parentUUID": "a9c6acec-c0fb-43f3-9e5f-8b7a21b76a21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "d3d3c38c-bf97-4be9-9e60-d042365cf6f1",
              "parentUUID": "a9c6acec-c0fb-43f3-9e5f-8b7a21b76a21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "179d6d14-2a23-4b9a-9075-5458ec11960e",
              "parentUUID": "a9c6acec-c0fb-43f3-9e5f-8b7a21b76a21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "6a16a3d1-809a-4d78-a761-43d141fd29ea",
              "parentUUID": "a9c6acec-c0fb-43f3-9e5f-8b7a21b76a21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "e85cd937-8757-4997-8640-440a2e21a9f6",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 266,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then(function ($lis) {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "41f21dc4-0a70-4067-b80f-6c7ea1961ed0",
                  "parentUUID": "e85cd937-8757-4997-8640-440a2e21a9f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 340,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1);\n  return 2;\n}).then(function (num) {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "7c0c670b-a967-45c1-a14e-6ed9c262e48a",
                  "parentUUID": "e85cd937-8757-4997-8640-440a2e21a9f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 183,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(function (num) {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "7ea0c05e-7795-46d4-9420-f48aee7bfb64",
                  "parentUUID": "e85cd937-8757-4997-8640-440a2e21a9f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 192,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(function (num) {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "4df83d52-6138-4bbb-8e40-07b32dd4fa3d",
                  "parentUUID": "e85cd937-8757-4997-8640-440a2e21a9f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "41f21dc4-0a70-4067-b80f-6c7ea1961ed0",
                "7c0c670b-a967-45c1-a14e-6ed9c262e48a",
                "7ea0c05e-7795-46d4-9420-f48aee7bfb64",
                "4df83d52-6138-4bbb-8e40-07b32dd4fa3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 981,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "4f2fbf47-bc26-432a-bafe-ae98d6c01901",
            "d3d3c38c-bf97-4be9-9e60-d042365cf6f1",
            "179d6d14-2a23-4b9a-9075-5458ec11960e",
            "6a16a3d1-809a-4d78-a761-43d141fd29ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2194,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0a416f07-5c15-4225-a971-75a434207f0a",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\actions.spec.js",
      "file": "cypress\\integration\\examples\\actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4815,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "db8fe37c-47f9-4187-bc6c-3f642d8ea988",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "bd80e6dd-74a5-49cd-9e39-2448a10b5a4f",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 593,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "78291d7a-da30-43ef-a0c4-86c3c497ebaf",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "55373dd0-0d8e-4acb-ac4a-bc34ae8ae385",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "50e7ffc0-22ff-471f-82d2-c28a2d5705c6",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "caeb3fc4-1864-4921-af0e-41aa40438962",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "f066dd12-6f13-43a6-a836-8a7e8aa3b9e4",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "ed47fdfc-d964-4ca4-9b6b-fa7759b11332",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 993,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "57a9c9e2-fd92-4d3e-8aaa-377412eb84f4",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "d249895d-4977-4389-aea9-7ee2b8681f2e",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "0dffb38b-5aa3-423c-a1da-0e335b0b0602",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "514dc1e1-9a5a-47ac-82da-ccbe2cbcc01c",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "05f6ce72-e3ef-4208-81a5-19e227e64405",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "ca3d9bab-8d34-41c9-aa85-0f5ccc1001a1",
              "parentUUID": "b967fcb3-bc93-4c7f-b8b9-0c9189290740",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db8fe37c-47f9-4187-bc6c-3f642d8ea988",
            "bd80e6dd-74a5-49cd-9e39-2448a10b5a4f",
            "78291d7a-da30-43ef-a0c4-86c3c497ebaf",
            "55373dd0-0d8e-4acb-ac4a-bc34ae8ae385",
            "50e7ffc0-22ff-471f-82d2-c28a2d5705c6",
            "caeb3fc4-1864-4921-af0e-41aa40438962",
            "f066dd12-6f13-43a6-a836-8a7e8aa3b9e4",
            "ed47fdfc-d964-4ca4-9b6b-fa7759b11332",
            "57a9c9e2-fd92-4d3e-8aaa-377412eb84f4",
            "d249895d-4977-4389-aea9-7ee2b8681f2e",
            "0dffb38b-5aa3-423c-a1da-0e335b0b0602",
            "514dc1e1-9a5a-47ac-82da-ccbe2cbcc01c",
            "05f6ce72-e3ef-4208-81a5-19e227e64405",
            "ca3d9bab-8d34-41c9-aa85-0f5ccc1001a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0a005a2f-853f-4d2d-8b9a-17f3b67c80e6",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\aliasing.spec.js",
      "file": "cypress\\integration\\examples\\aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a88caf10-c6cd-465e-8bd4-0d3441549118",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 634,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "526d622e-6405-48e9-9e0f-ba8b2b53de19",
              "parentUUID": "a88caf10-c6cd-465e-8bd4-0d3441549118",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "6822e1bd-575c-4e80-9412-4397bbb5912d",
              "parentUUID": "a88caf10-c6cd-465e-8bd4-0d3441549118",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "526d622e-6405-48e9-9e0f-ba8b2b53de19",
            "6822e1bd-575c-4e80-9412-4397bbb5912d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1438,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "843b9758-b8ba-4520-8096-832e0edbdc47",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\assertions.spec.js",
      "file": "cypress\\integration\\examples\\assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f1c6717e-af8a-4f0b-9bc2-c7a906c67500",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "262bd4fe-768b-4702-8809-838138ae115c",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 617,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementâ€™s-text-contents",
                  "err": {},
                  "uuid": "b98ac72b-1443-4119-bd35-acec681e55b8",
                  "parentUUID": "262bd4fe-768b-4702-8809-838138ae115c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "26b10831-80ea-49aa-8114-adff54e2711a",
                  "parentUUID": "262bd4fe-768b-4702-8809-838138ae115c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b98ac72b-1443-4119-bd35-acec681e55b8",
                "26b10831-80ea-49aa-8114-adff54e2711a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 783,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 143,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "abecd51d-fdd7-41f8-bee9-e5dd07b0239d",
                  "parentUUID": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 134,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should(function ($p) {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = $p.map(function (i, el) {\n    return Cypress.$(el).text();\n  }); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "e165994b-4279-48c4-a635-c458f81b46b4",
                  "parentUUID": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 132,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should(function ($div) {\n  expect($div).to.have.length(1);\n  var className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "ce1a52ed-9603-49cf-b029-2b5bc58deaf6",
                  "parentUUID": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should(function ($div) {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  var className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  }\n});",
                  "err": {},
                  "uuid": "280887ad-006b-4e13-8655-39159710b187",
                  "parentUUID": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 183,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function normalizeText(s) {\n  return s.replace(/\\s/g, '').toLowerCase();\n};\ncy.get('.two-elements').find('.first').then(function ($first) {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should(function ($div) {\n  // we can massage text before comparing\n  var secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "30f1f0e3-4295-42b4-a919-2e954a5a06d2",
                  "parentUUID": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 151,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "a8980a94-015b-4ad1-b0df-713d8662b11b",
                  "parentUUID": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1629,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should(function ($div) {\n  var n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "b2dd257d-5313-42c4-a377-414e95901f8a",
                  "parentUUID": "3d4cbf7f-f8ef-4214-9065-f8c190d71687",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "abecd51d-fdd7-41f8-bee9-e5dd07b0239d",
                "e165994b-4279-48c4-a635-c458f81b46b4",
                "ce1a52ed-9603-49cf-b029-2b5bc58deaf6",
                "280887ad-006b-4e13-8655-39159710b187",
                "30f1f0e3-4295-42b4-a919-2e954a5a06d2",
                "a8980a94-015b-4ad1-b0df-713d8662b11b",
                "b2dd257d-5313-42c4-a377-414e95901f8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2539,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ab6d3e3a-860b-483f-9742-79c5813da18d",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\connectors.spec.js",
      "file": "cypress\\integration\\examples\\connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "12efe245-0ac5-447e-ad3e-f35660d7e702",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 629,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(function ($el, index, $list) {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "27e6f662-a8d0-4cba-b644-c42e21e8c71c",
              "parentUUID": "12efe245-0ac5-447e-ad3e-f35660d7e702",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "94babce6-7ed9-47fb-8577-0e85f40ff4cd",
              "parentUUID": "12efe245-0ac5-447e-ad3e-f35660d7e702",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "9fa82001-da4c-4fd8-bf42-b50b8fcefb78",
              "parentUUID": "12efe245-0ac5-447e-ad3e-f35660d7e702",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "54393d6f-a224-4d32-a01a-e3a0a2775a8e",
              "parentUUID": "12efe245-0ac5-447e-ad3e-f35660d7e702",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "456c9268-0b96-423c-bde6-887591ff3c31",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 139,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then(function ($lis) {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "68f8e823-e002-49cc-96c4-b2d7373700fd",
                  "parentUUID": "456c9268-0b96-423c-bde6-887591ff3c31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 145,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1);\n  return 2;\n}).then(function (num) {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "7bb6925c-4bc8-4861-a92b-58c2129b6c8b",
                  "parentUUID": "456c9268-0b96-423c-bde6-887591ff3c31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 163,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(function (num) {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "a8fa684a-2bfc-4822-ae5e-858df24fd445",
                  "parentUUID": "456c9268-0b96-423c-bde6-887591ff3c31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 152,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(function (num) {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "ed3d5e33-7dc5-42e2-950d-9b5c2206098c",
                  "parentUUID": "456c9268-0b96-423c-bde6-887591ff3c31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68f8e823-e002-49cc-96c4-b2d7373700fd",
                "7bb6925c-4bc8-4861-a92b-58c2129b6c8b",
                "a8fa684a-2bfc-4822-ae5e-858df24fd445",
                "ed3d5e33-7dc5-42e2-950d-9b5c2206098c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 599,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "27e6f662-a8d0-4cba-b644-c42e21e8c71c",
            "94babce6-7ed9-47fb-8577-0e85f40ff4cd",
            "9fa82001-da4c-4fd8-bf42-b50b8fcefb78",
            "54393d6f-a224-4d32-a01a-e3a0a2775a8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1008,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "95aa00f3-5105-4782-bc47-7a17f4df5c16",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cookies.spec.js",
      "file": "cypress\\integration\\examples\\cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e6b4cf2-face-499d-af97-c97be4f1e2c9",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 637,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "b608ef17-71b4-4974-95fe-09c08e45a232",
              "parentUUID": "7e6b4cf2-face-499d-af97-c97be4f1e2c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "f1c4abe0-1f4c-4293-adbf-bcdd6a66e2ca",
              "parentUUID": "7e6b4cf2-face-499d-af97-c97be4f1e2c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "a99e90bf-a993-4413-bfbf-071d4fdea2bb",
              "parentUUID": "7e6b4cf2-face-499d-af97-c97be4f1e2c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "b348fe95-7803-41e6-9046-dfd301337911",
              "parentUUID": "7e6b4cf2-face-499d-af97-c97be4f1e2c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 568,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "20e16a19-8028-46e6-a428-d6a603dca529",
              "parentUUID": "7e6b4cf2-face-499d-af97-c97be4f1e2c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b608ef17-71b4-4974-95fe-09c08e45a232",
            "f1c4abe0-1f4c-4293-adbf-bcdd6a66e2ca",
            "a99e90bf-a993-4413-bfbf-071d4fdea2bb",
            "b348fe95-7803-41e6-9046-dfd301337911",
            "20e16a19-8028-46e6-a428-d6a603dca529"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b59d145e-0e71-45f9-a93b-1ae916045fe5",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cypress_api.spec.js",
      "file": "cypress\\integration\\examples\\cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dcf4642f-752d-447d-a645-24b52b3ab5c5",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 484,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, function (subject, method) {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {// subject is still $button\n});",
              "err": {},
              "uuid": "062ee1e8-fa2d-4ae2-9b8e-ad6102b55c07",
              "parentUUID": "dcf4642f-752d-447d-a645-24b52b3ab5c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "062ee1e8-fa2d-4ae2-9b8e-ad6102b55c07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 484,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e6ee8d4b-6c99-44a8-a492-989e892869e3",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "4e8a6118-82db-4d71-b682-7262d6ac9032",
              "parentUUID": "e6ee8d4b-6c99-44a8-a492-989e892869e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "f6108bce-6fc1-4632-b949-d177c918a444",
              "parentUUID": "e6ee8d4b-6c99-44a8-a492-989e892869e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "7f19fcf6-fdd7-421f-ada0-1884a1eb9f26",
              "parentUUID": "e6ee8d4b-6c99-44a8-a492-989e892869e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e8a6118-82db-4d71-b682-7262d6ac9032",
            "f6108bce-6fc1-4632-b949-d177c918a444",
            "7f19fcf6-fdd7-421f-ada0-1884a1eb9f26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bad0edab-9eca-4e73-9b2c-b21d6e03ce2c",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "d5c3a0be-d1a7-4a48-8358-f19aba5a51bf",
              "parentUUID": "bad0edab-9eca-4e73-9b2c-b21d6e03ce2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5c3a0be-d1a7-4a48-8358-f19aba5a51bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 172,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6b659b00-b8b6-42d5-8c7b-4bb1d22f3964",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "d92ef60a-faa9-44fd-8a05-6696bc173e42",
              "parentUUID": "6b659b00-b8b6-42d5-8c7b-4bb1d22f3964",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d92ef60a-faa9-44fd-8a05-6696bc173e42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99edbac7-5f3d-4a8c-b347-9c880d416fa7",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "f29c8119-4529-461b-9648-1869caadec28",
              "parentUUID": "99edbac7-5f3d-4a8c-b347-9c880d416fa7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f29c8119-4529-461b-9648-1869caadec28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 162,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a8ab52d-21c1-4e82-b4b7-3a3921a2575f",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "1178b2eb-af40-4894-af15-08c54c8b5030",
              "parentUUID": "0a8ab52d-21c1-4e82-b4b7-3a3921a2575f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1178b2eb-af40-4894-af15-08c54c8b5030"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a893d21b-90d6-4fbb-9953-36349f0904fb",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "a3d78501-6b0e-4fc2-a289-844b20835fa4",
              "parentUUID": "a893d21b-90d6-4fbb-9953-36349f0904fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3d78501-6b0e-4fc2-a289-844b20835fa4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c45a7dd2-0397-496a-8289-4666a0ad741d",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "d33addd1-c58a-4208-8d90-e48949aa969b",
              "parentUUID": "c45a7dd2-0397-496a-8289-4666a0ad741d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d33addd1-c58a-4208-8d90-e48949aa969b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 146,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3b62842-72ce-4c47-925e-b2f2e2abb356",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "f2317ab2-2926-4c02-95e9-da9309b6f062",
              "parentUUID": "e3b62842-72ce-4c47-925e-b2f2e2abb356",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2317ab2-2926-4c02-95e9-da9309b6f062"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 143,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7d907d3c-4e59-44cb-96f2-febf21329b7d",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "2f21ca79-3f92-48a5-a21e-10f71fb9c7d5",
              "parentUUID": "7d907d3c-4e59-44cb-96f2-febf21329b7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f21ca79-3f92-48a5-a21e-10f71fb9c7d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a812ad58-7484-450f-b7ce-6837667bf9b8",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\files.spec.js",
      "file": "cypress\\integration\\examples\\files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fbf8c20a-8c04-4812-91bd-f1fecf5f2e6d",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "41de1688-8e12-4817-8f1b-48323cc8f9ae",
              "parentUUID": "fbf8c20a-8c04-4812-91bd-f1fecf5f2e6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "246d6c88-9a7f-46e8-bff1-0a676d11c2fe",
              "parentUUID": "fbf8c20a-8c04-4812-91bd-f1fecf5f2e6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "815310b2-a4ac-4b00-851f-127c3768b673",
              "parentUUID": "fbf8c20a-8c04-4812-91bd-f1fecf5f2e6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(function (users) {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(function (profile) {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "f25d18df-d919-4ff7-832a-c246dce3d4e6",
              "parentUUID": "fbf8c20a-8c04-4812-91bd-f1fecf5f2e6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41de1688-8e12-4817-8f1b-48323cc8f9ae",
            "246d6c88-9a7f-46e8-bff1-0a676d11c2fe",
            "815310b2-a4ac-4b00-851f-127c3768b673",
            "f25d18df-d919-4ff7-832a-c246dce3d4e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1338,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8700f353-f3dc-4df1-bbfe-b417ebdc3cb3",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\local_storage.spec.js",
      "file": "cypress\\integration\\examples\\local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "500b8a73-e6f5-4d25-b9f3-74ba88e5c51f",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 1274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.be[\"null\"];\n}); // Clear key matching string in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage('prop1').should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "b2e8ecdf-afba-4b1c-bf82-65e231cefd4d",
              "parentUUID": "500b8a73-e6f5-4d25-b9f3-74ba88e5c51f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2e8ecdf-afba-4b1c-bf82-65e231cefd4d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1274,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "40a135a7-095b-455b-91e6-7fefd0977269",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\location.spec.js",
      "file": "cypress\\integration\\examples\\location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "53ed3334-6fec-491a-bf49-f1980173a5dd",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 597,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "636a2983-1f5e-42a0-a3b3-85b9fe95ac9e",
              "parentUUID": "53ed3334-6fec-491a-bf49-f1980173a5dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "8da8eb10-53fe-4c9e-a328-4eb314c30fd8",
              "parentUUID": "53ed3334-6fec-491a-bf49-f1980173a5dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "d739c325-f47f-4584-955d-8dd6db643d57",
              "parentUUID": "53ed3334-6fec-491a-bf49-f1980173a5dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "636a2983-1f5e-42a0-a3b3-85b9fe95ac9e",
            "8da8eb10-53fe-4c9e-a328-4eb314c30fd8",
            "d739c325-f47f-4584-955d-8dd6db643d57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1091,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e99bf693-7b11-4077-8414-db1d1f10307c",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\misc.spec.js",
      "file": "cypress\\integration\\examples\\misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93c9c63b-6ffa-4230-8d90-64f6fbcc6689",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 1333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "4cf6759a-9ea5-4fdb-a58f-50d3ff79f347",
              "parentUUID": "93c9c63b-6ffa-4230-8d90-64f6fbcc6689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \".concat(Cypress.platform, \" architecture \").concat(Cypress.arch)); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nvar isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "4c267873-0b11-4aa5-b365-fa637b34304f",
              "parentUUID": "93c9c63b-6ffa-4230-8d90-64f6fbcc6689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 887,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "85e17e20-af91-463f-8cda-801d4040a633",
              "parentUUID": "93c9c63b-6ffa-4230-8d90-64f6fbcc6689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "ae9727a3-9a3b-408c-87a9-a0f4f9ebcfb9",
              "parentUUID": "93c9c63b-6ffa-4230-8d90-64f6fbcc6689",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8b628e22-3cde-48c8-8b44-6a612e72b8a8",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 3849,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": "{\n  \"title\": \"Screenshot\",\n  \"value\": \"screenshots\\\\examples\\\\misc.spec.js\\\\my-image.png\"\n}",
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "3f74e326-9fc1-45cf-8f0a-e6bae558285d",
                  "parentUUID": "8b628e22-3cde-48c8-8b44-6a612e72b8a8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 425,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot: function onBeforeScreenshot() {},\n  onAfterScreenshot: function onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "cc1be80e-fd47-4208-b6ca-ce156385d1d7",
                  "parentUUID": "8b628e22-3cde-48c8-8b44-6a612e72b8a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f74e326-9fc1-45cf-8f0a-e6bae558285d",
                "cc1be80e-fd47-4208-b6ca-ce156385d1d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4274,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "4cf6759a-9ea5-4fdb-a58f-50d3ff79f347",
            "4c267873-0b11-4aa5-b365-fa637b34304f",
            "85e17e20-af91-463f-8cda-801d4040a633",
            "ae9727a3-9a3b-408c-87a9-a0f4f9ebcfb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e9241d7b-f635-4ba5-9e3a-edebbe06cee7",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\navigation.spec.js",
      "file": "cypress\\integration\\examples\\navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c7be5ca-528e-4160-be11-2caed56b88c6",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 2552,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "c6c8e839-d4c9-4b26-a345-c00df6d18dfb",
              "parentUUID": "5c7be5ca-528e-4160-be11-2caed56b88c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 1332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "30bf894c-1143-4504-8220-492f170f9d7d",
              "parentUUID": "5c7be5ca-528e-4160-be11-2caed56b88c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 1161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad: function onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  },\n  onLoad: function onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  }\n});",
              "err": {},
              "uuid": "8b8b0d60-ac27-4a28-be71-201c3e72c947",
              "parentUUID": "5c7be5ca-528e-4160-be11-2caed56b88c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6c8e839-d4c9-4b26-a345-c00df6d18dfb",
            "30bf894c-1143-4504-8220-492f170f9d7d",
            "8b8b0d60-ac27-4a28-be71-201c3e72c947"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5045,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "97ef6860-0ae0-44ae-9c2b-5959d398515e",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\network_requests.spec.js",
      "file": "cypress\\integration\\examples\\network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8bd36296-5da1-40ff-8e02-05bb05a3e82c",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(function (response) {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "6960c301-3bb1-4c55-8e67-037327a79975",
              "parentUUID": "8bd36296-5da1-40ff-8e02-05bb05a3e82c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 1319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(function (response) {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "6b72f2d5-eed3-4647-bcda-b4e7bf777000",
              "parentUUID": "8bd36296-5da1-40ff-8e02-05bb05a3e82c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "49c97797-0eaf-451f-85fe-8d65777f8358",
              "parentUUID": "8bd36296-5da1-40ff-8e02-05bb05a3e82c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(function (user) {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(function (response) {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "578b628f-db67-4443-8529-ecd23dd47247",
              "parentUUID": "8bd36296-5da1-40ff-8e02-05bb05a3e82c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE ðŸ‘€\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "b619d212-2528-4c20-bf1e-d2178cf51c50",
              "parentUUID": "8bd36296-5da1-40ff-8e02-05bb05a3e82c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1991,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nvar message = 'whoa, this comment does not exist'; // Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(function (_ref) {\n  var request = _ref.request,\n      response = _ref.response;\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "45d89117-ee8b-4215-9959-c225be3321eb",
              "parentUUID": "8bd36296-5da1-40ff-8e02-05bb05a3e82c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6960c301-3bb1-4c55-8e67-037327a79975",
            "6b72f2d5-eed3-4647-bcda-b4e7bf777000",
            "49c97797-0eaf-451f-85fe-8d65777f8358",
            "578b628f-db67-4443-8529-ecd23dd47247",
            "b619d212-2528-4c20-bf1e-d2178cf51c50",
            "45d89117-ee8b-4215-9959-c225be3321eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7251,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4b3600ed-2aa5-4527-91ac-dd61af313664",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\querying.spec.js",
      "file": "cypress\\integration\\examples\\querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d822b4d8-e1d1-4345-ae9e-03db14658d5e",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 1276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "f53b1396-12bc-4f45-a090-79ab30bd0d9a",
              "parentUUID": "d822b4d8-e1d1-4345-ae9e-03db14658d5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 781,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "4ca9cd86-3988-4da0-b8c2-657ee9b7cad3",
              "parentUUID": "d822b4d8-e1d1-4345-ae9e-03db14658d5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "c5308d1e-b507-4044-892e-611ff6724b46",
              "parentUUID": "d822b4d8-e1d1-4345-ae9e-03db14658d5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 497,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(function () {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "ceece841-b2c3-4d74-b6e5-90a8ada112fd",
              "parentUUID": "d822b4d8-e1d1-4345-ae9e-03db14658d5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 1345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "f5d5f585-1a31-4689-ba70-e3232a22f438",
              "parentUUID": "d822b4d8-e1d1-4345-ae9e-03db14658d5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f53b1396-12bc-4f45-a090-79ab30bd0d9a",
            "4ca9cd86-3988-4da0-b8c2-657ee9b7cad3",
            "c5308d1e-b507-4044-892e-611ff6724b46",
            "ceece841-b2c3-4d74-b6e5-90a8ada112fd",
            "f5d5f585-1a31-4689-ba70-e3232a22f438"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4328,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8db29b1c-b6bb-47c3-86f3-1119c113773d",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "file": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 702,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  foo: function foo() {}\n};\nvar spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "e20418cb-d3bd-4382-88da-7fe43f7def85",
              "parentUUID": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2609,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo: function foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(function () {\n  obj.foo('first');\n}, 500);\nsetTimeout(function () {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "21903e35-0cd0-41d8-bf33-5f33cdaa22a2",
              "parentUUID": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo: function foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nvar stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "0a096c0a-5873-472c-aaa3-e1efc84dd79e",
              "parentUUID": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 663,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "145f44c9-ec30-4c9b-8d4f-f47a3f2bcca8",
              "parentUUID": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 754,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "553d0db4-e908-4cfb-9440-a3923ab3faa4",
              "parentUUID": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet: function greet(name) {\n    return \"Hello, \".concat(name, \"!\");\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number)[\"throws\"](new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi'); // @ts-ignore\nexpect(function () {\n  return greeter.greet(42);\n}).to[\"throw\"]('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "281a4af7-9892-49d2-9abc-623836a23666",
              "parentUUID": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add: function add(a, b) {\n    return a + b;\n  }\n};\nvar spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match[\"in\"]([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nvar isEven = function isEven(x) {\n  return x % 2 === 0;\n}; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nvar isGreaterThan = function isGreaterThan(limit) {\n  return function (x) {\n    return x > limit;\n  };\n};\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nvar isLessThan = function isLessThan(limit) {\n  return function (x) {\n    return x < limit;\n  };\n}; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nvar M = Cypress.sinon.match;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "f456c4e2-ea92-4184-b7ea-d1baa4d63315",
              "parentUUID": "77a4e098-b8bf-4c37-ab34-7fd52ad6227c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e20418cb-d3bd-4382-88da-7fe43f7def85",
            "21903e35-0cd0-41d8-bf33-5f33cdaa22a2",
            "0a096c0a-5873-472c-aaa3-e1efc84dd79e",
            "145f44c9-ec30-4c9b-8d4f-f47a3f2bcca8",
            "553d0db4-e908-4cfb-9440-a3923ab3faa4",
            "281a4af7-9892-49d2-9abc-623836a23666",
            "f456c4e2-ea92-4184-b7ea-d1baa4d63315"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5457,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "489bf247-7ea7-45ef-9c89-1bd3f7b703b5",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\traversal.spec.js",
      "file": "cypress\\integration\\examples\\traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 1332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "4cf68ba8-73aa-4f7e-b84b-2c654835f960",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "09664c62-1210-45c5-a0fc-c8d524ce0403",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "dc40a98d-e4ed-485b-b67b-376fd175572e",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "dcef9725-f59a-45c2-b113-c5da404a2eff",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "01ab57e7-1f45-46dc-b284-3f91d420b246",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 428,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "cc8ab55a-a015-46dd-b967-b8398c98a04b",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 486,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "177f36c1-86f3-4b0a-80aa-be7a34f7afce",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 533,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "52faf722-1ea4-4d6c-9463-2a7e319fe233",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "6a635d29-52c8-4af8-b7c1-824f67895f22",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "97541e52-5a03-4549-aae9-b48a55c8fda5",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "cc4986e8-5426-402c-8a3c-76fcbf18bdb6",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "e742437e-9696-4730-9a58-c3d179067f9f",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "fda8b387-a0e8-4a22-8f1f-d5ac5fa471a4",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 453,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "0b95cfa2-270c-4d59-8bc0-e2be6065d03b",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "73383961-2f9f-4d35-af33-f7763e62cbe6",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "fc31a124-b032-47a5-9beb-eea615269df4",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "ce09a6af-6e5e-4b2a-ba63-c6baf2c5b080",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 438,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "9fa06f29-07ca-44c5-bdf2-a0e26e189e6b",
              "parentUUID": "fcf6321b-ab4a-49a0-9060-c7c3d751a149",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cf68ba8-73aa-4f7e-b84b-2c654835f960",
            "09664c62-1210-45c5-a0fc-c8d524ce0403",
            "dc40a98d-e4ed-485b-b67b-376fd175572e",
            "dcef9725-f59a-45c2-b113-c5da404a2eff",
            "01ab57e7-1f45-46dc-b284-3f91d420b246",
            "cc8ab55a-a015-46dd-b967-b8398c98a04b",
            "177f36c1-86f3-4b0a-80aa-be7a34f7afce",
            "52faf722-1ea4-4d6c-9463-2a7e319fe233",
            "6a635d29-52c8-4af8-b7c1-824f67895f22",
            "97541e52-5a03-4549-aae9-b48a55c8fda5",
            "cc4986e8-5426-402c-8a3c-76fcbf18bdb6",
            "e742437e-9696-4730-9a58-c3d179067f9f",
            "fda8b387-a0e8-4a22-8f1f-d5ac5fa471a4",
            "0b95cfa2-270c-4d59-8bc0-e2be6065d03b",
            "73383961-2f9f-4d35-af33-f7763e62cbe6",
            "fc31a124-b032-47a5-9beb-eea615269df4",
            "ce09a6af-6e5e-4b2a-ba63-c6baf2c5b080",
            "9fa06f29-07ca-44c5-bdf2-a0e26e189e6b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2f9e972b-73a6-4f89-830c-28c6f7b6090b",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\utilities.spec.js",
      "file": "cypress\\integration\\examples\\utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7a6b775-46b2-4664-8f0c-e50b3996f171",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  var ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "4327b81e-328e-45cd-a555-1e3f6a2fe945",
              "parentUUID": "f7a6b775-46b2-4664-8f0c-e50b3996f171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "68c49883-13a2-444a-ac47-dc5f2474b283",
              "parentUUID": "f7a6b775-46b2-4664-8f0c-e50b3996f171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(function (dataUrl) {\n    // create an <img> element and set its src to the dataUrl\n    var img = Cypress.$('<img />', {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "b9a8ec09-8551-4f41-bcc2-1b23a8ae2f46",
              "parentUUID": "f7a6b775-46b2-4664-8f0c-e50b3996f171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be[\"true\"];\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"false\"]; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"true\"]; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be[\"false\"];",
              "err": {},
              "uuid": "17c3c335-305f-4e72-bb42-e15146b27ffd",
              "parentUUID": "f7a6b775-46b2-4664-8f0c-e50b3996f171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.moment() - format or parse dates using a moment method",
              "fullTitle": "Utilities Cypress.moment() - format or parse dates using a moment method",
              "timedOut": null,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/moment\nvar time = Cypress.moment('2014-04-25T19:38:53.196Z').utc().format('h:mm A');\nexpect(time).to.be.a('string');\ncy.get('.utility-moment').contains('3:38 PM').should('have.class', 'badge'); // the time in the element should be between 3pm and 5pm\nvar start = Cypress.moment('3:00 PM', 'LT');\nvar end = Cypress.moment('5:00 PM', 'LT');\ncy.get('.utility-moment .badge').should(function ($el) {\n  // parse American time like \"3:38 PM\"\n  var m = Cypress.moment($el.text().trim(), 'LT'); // display hours + minutes + AM|PM\n  var f = 'h:mm A';\n  expect(m.isBetween(start, end), \"\".concat(m.format(f), \" should be between \").concat(start.format(f), \" and \").concat(end.format(f))).to.be[\"true\"];\n});",
              "err": {},
              "uuid": "12fa52fe-4b76-433c-9f70-42de5f49131d",
              "parentUUID": "f7a6b775-46b2-4664-8f0c-e50b3996f171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise(function (resolve, reject) {\n    setTimeout(function () {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(function () {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(function (str) {\n    expect(str).to.eq('foo');\n    expect(waited).to.be[\"true\"];\n  });\n});",
              "err": {},
              "uuid": "f3480d42-d716-414d-a582-8fc118a8871e",
              "parentUUID": "f7a6b775-46b2-4664-8f0c-e50b3996f171",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4327b81e-328e-45cd-a555-1e3f6a2fe945",
            "68c49883-13a2-444a-ac47-dc5f2474b283",
            "b9a8ec09-8551-4f41-bcc2-1b23a8ae2f46",
            "17c3c335-305f-4e72-bb42-e15146b27ffd",
            "12fa52fe-4b76-433c-9f70-42de5f49131d",
            "f3480d42-d716-414d-a582-8fc118a8871e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8bddf951-369c-478f-b7bc-521396b58b81",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\viewport.spec.js",
      "file": "cypress\\integration\\examples\\viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "37e39458-ca2c-4f65-9652-f3e52ec4e6d8",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 4450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "fdb26d4f-8af3-4267-a555-8e7098b97fd1",
              "parentUUID": "37e39458-ca2c-4f65-9652-f3e52ec4e6d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fdb26d4f-8af3-4267-a555-8e7098b97fd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4450,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cef12b68-4474-4337-9fa1-cccaa8284d11",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\waiting.spec.js",
      "file": "cypress\\integration\\examples\\waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3192abe-41d1-40f3-a9dc-e41a931517a2",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 8698,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "f47495b7-f833-4506-9777-8a5d6a592e92",
              "parentUUID": "b3192abe-41d1-40f3-a9dc-e41a931517a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 3129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "0552dd7d-ac49-4589-99b3-f29a41ae7ad6",
              "parentUUID": "b3192abe-41d1-40f3-a9dc-e41a931517a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f47495b7-f833-4506-9777-8a5d6a592e92",
            "0552dd7d-ac49-4589-99b3-f29a41ae7ad6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c8d5dbaf-8f81-4739-94e8-98d5d4cc1773",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\window.spec.js",
      "file": "cypress\\integration\\examples\\window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e96c453e-b815-47cb-893a-d9b5963d8bb5",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 1438,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "ba92ac51-f28b-4cd1-892f-1d46e5673020",
              "parentUUID": "e96c453e-b815-47cb-893a-d9b5963d8bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 2518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "133995d1-702a-4676-8fd6-2865dc3502f3",
              "parentUUID": "e96c453e-b815-47cb-893a-d9b5963d8bb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 973,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "8fe769c6-8586-4579-ad4b-3072fdeac8be",
              "parentUUID": "e96c453e-b815-47cb-893a-d9b5963d8bb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba92ac51-f28b-4cd1-892f-1d46e5673020",
            "133995d1-702a-4676-8fd6-2865dc3502f3",
            "8fe769c6-8586-4579-ad4b-3072fdeac8be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4929,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a8e231bf-164a-4004-9b4a-d7b86c3cdf45",
      "title": "",
      "fullFile": "cypress\\integration\\tracktik\\amazonSample.js",
      "file": "cypress\\integration\\tracktik\\amazonSample.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Validate elements on the landing page",
          "fullTitle": "Validate elements on the landing page",
          "timedOut": null,
          "duration": 19951,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var url = 'https://www.amazon.ca//';\nvar amazonLogo = '#nav-logo-sprites'; //Visit Amazon.ca\ncy.visit(url); //Amazon Logo should be displayed\ncy.get(amazonLogo).should('be.visible'); //Search bar should be displayed\ncy.get('#nav-search').should('be.visible').click(); //Country/Location flag should be displayed\ncy.get('.icp-nav-flag').should('be.visible'); //Hello message should be displayed\ncy.get('#nav-global-location-popover-link').should('be.visible'); //Accounts text should be displayed\ncy.get('#nav-link-accountList').should('be.visible'); //Orders and returns\ncy.get('#nav-orders').should('be.visible'); //Shopping Cart Icon\ncy.get('.nav-cart-icon').should('be.visible'); // All Menu Bar\ncy.get('#nav-hamburger-menu').should('be.visible'); //BestSellers\ncy.get('[href=\"/Best-Sellers-generic/zgbs/?ref_=nav_cs_bestsellers_63ca45fd42734a1a90e55e964c1a4be0\"]').should('be.visible'); //Gift Ideas\ncy.get('[href=\"/gcx/-/gfhz/?ref_=nav_cs_giftfinder_192be93f79264d46933b55cd454cfadf\"]').should('be.visible'); //Prime\ncy.get('#nav-link-prime > :nth-child(1)').should('be.visible'); //New Releases\ncy.get('[href=\"/gp/new-releases/?ref_=nav_cs_newreleases_3700f09c268c435e83b755749c4fc4e9\"]').should('be.visible'); //Customer Service\ncy.get('[href=\"/gp/help/customer/display.html?ref_=nav_cs_help_91eafdc699444f9c9ab412df262cc693\"]').should('be.visible'); //Slider\ncy.get('.cropped-image-map-size > .cropped-image-map-center-alignment > span > .a-link-normal > img').should('be.visible'); //Search for a particular item\ncy.get('#nav-search').type('Apple'); //Click on Account to sign in\ncy.get('#nav-link-accountList').click(); //Verify amazon logo is visible\ncy.get('.a-icon-logo').should('be.visible'); //Verify sign in page is visible\ncy.get('.a-padding-extra-large').should('be.visible'); //Verify username field is visible\ncy.get('#ap_email').should('be.visible'); //Verify username field is editable\ncy.get('#ap_email').should('be.enabled'); //verify create account button is visible\ncy.get('#createAccountSubmit').should('be.visible'); //verify continue button is visible\ncy.get('.a-button-inner > #continue').should('be.visible').click(); //Enter Username\ncy.get('#ap_email').type('dhavaldesai1609@gmail.com'); //Click on continue button\ncy.get('.a-button-inner > #continue').should('be.visible').click(); //Verify username field is visible\ncy.get('#ap_password').should('be.visible'); //Verify username field is editable\ncy.get('#ap_password').should('be.enabled'); //Enter Password\ncy.get('#ap_password').type('neverShareYourPassword@123'); //Verify sign in button\ncy.get('#signInSubmit').should('be.visible'); //Click on sign in button\ncy.get('#signInSubmit').click();",
          "err": {},
          "uuid": "758b994f-9974-423b-8dfb-b5890587c794",
          "parentUUID": "a8e231bf-164a-4004-9b4a-d7b86c3cdf45",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "758b994f-9974-423b-8dfb-b5890587c794"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 19951,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "5f743697-43a9-4cd2-84e4-a823340733d2",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\actions.spec.js",
      "file": "cypress\\integration\\examples\\actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 6588,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "c90304e9-bc3d-4171-9c70-b34753172820",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 1073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "9de785de-2e2b-470b-8894-261c1e3da7b9",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 1058,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "8a3461e7-b7ca-4709-87d3-dae53fc1a617",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 1254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "cf81278a-579a-4684-92af-931ea1fe6ff0",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 1146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "47f5bca2-ce48-4140-8ccd-dd5d76f445f0",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 3584,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "48dc3e03-951f-4bd5-acd1-04a2b8f3baef",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 843,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "42b89471-1af2-4a6e-b595-081cffd107be",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "c4f7191a-d3ed-4a9b-8471-6145343c5614",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1898,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "ccdaf7d2-0550-4f52-9708-0a85d38eeb0e",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 2121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "69f4899c-bf36-4e73-a27f-0ef59ac629f9",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "5ae85065-9cd2-4094-a0f3-815190b66d2a",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 969,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "8b61894e-54bf-4d7a-8c65-d8bee64863df",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "d4264dec-0f96-4b00-a9f6-979e0e50a711",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "296faa22-33d8-4ff2-ac41-46a62ab605f7",
              "parentUUID": "63d711cd-6d2d-41c8-9e73-ed9a7346146a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c90304e9-bc3d-4171-9c70-b34753172820",
            "9de785de-2e2b-470b-8894-261c1e3da7b9",
            "8a3461e7-b7ca-4709-87d3-dae53fc1a617",
            "cf81278a-579a-4684-92af-931ea1fe6ff0",
            "47f5bca2-ce48-4140-8ccd-dd5d76f445f0",
            "48dc3e03-951f-4bd5-acd1-04a2b8f3baef",
            "42b89471-1af2-4a6e-b595-081cffd107be",
            "c4f7191a-d3ed-4a9b-8471-6145343c5614",
            "ccdaf7d2-0550-4f52-9708-0a85d38eeb0e",
            "69f4899c-bf36-4e73-a27f-0ef59ac629f9",
            "5ae85065-9cd2-4094-a0f3-815190b66d2a",
            "8b61894e-54bf-4d7a-8c65-d8bee64863df",
            "d4264dec-0f96-4b00-a9f6-979e0e50a711",
            "296faa22-33d8-4ff2-ac41-46a62ab605f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}